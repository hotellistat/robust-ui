{"version":3,"file":"config.8c14b198.js","sources":["../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/typescript/convert.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/flow/convert.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/utils.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/proptypes/convert.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/index.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/types.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/defaultValue.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/docgenInfo.js","../../node_modules/esutils/lib/ast.js","../../node_modules/esutils/lib/code.js","../../node_modules/esutils/lib/keyword.js","../../node_modules/esutils/lib/utils.js","../../node_modules/browser-assert/lib/assert.js","../../node_modules/doctrine/lib/utility.js","../../node_modules/doctrine/lib/typed.js","../../node_modules/doctrine/lib/doctrine.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/jsdocParser.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/utils.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createType.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createDefaultValue.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createPropDef.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createType.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createDefaultValue.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createPropDef.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/createPropDef.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/extractDocgenProps.js","../../node_modules/@storybook/docs-tools/dist/esm/argTypes/enhanceArgTypes.js","../../node_modules/@storybook/vue3/dist/config.mjs"],"sourcesContent":["/* eslint-disable no-case-declarations */\nconst convertSig = type => {\n  switch (type.type) {\n    case 'function':\n      return {\n        name: 'function'\n      };\n\n    case 'object':\n      const values = {};\n      type.signature.properties.forEach(prop => {\n        values[prop.key] = convert(prop.value);\n      });\n      return {\n        name: 'object',\n        value: values\n      };\n\n    default:\n      throw new Error(`Unknown: ${type}`);\n  }\n};\n\nexport const convert = type => {\n  const {\n    name,\n    raw\n  } = type;\n  const base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n\n  switch (type.name) {\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'boolean':\n      {\n        return Object.assign({}, base, {\n          name\n        });\n      }\n\n    case 'Array':\n      {\n        return Object.assign({}, base, {\n          name: 'array',\n          value: type.elements.map(convert)\n        });\n      }\n\n    case 'signature':\n      return Object.assign({}, base, convertSig(type));\n\n    case 'union':\n    case 'intersection':\n      return Object.assign({}, base, {\n        name,\n        value: type.elements.map(convert)\n      });\n\n    default:\n      return Object.assign({}, base, {\n        name: 'other',\n        value: name\n      });\n  }\n};","/* eslint-disable no-case-declarations */\nconst isLiteral = type => type.name === 'literal';\n\nconst toEnumOption = element => element.value.replace(/['|\"]/g, '');\n\nconst convertSig = type => {\n  switch (type.type) {\n    case 'function':\n      return {\n        name: 'function'\n      };\n\n    case 'object':\n      const values = {};\n      type.signature.properties.forEach(prop => {\n        values[prop.key] = convert(prop.value);\n      });\n      return {\n        name: 'object',\n        value: values\n      };\n\n    default:\n      throw new Error(`Unknown: ${type}`);\n  }\n};\n\nexport const convert = type => {\n  const {\n    name,\n    raw\n  } = type;\n  const base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n\n  switch (type.name) {\n    case 'literal':\n      return Object.assign({}, base, {\n        name: 'other',\n        value: type.value\n      });\n\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'boolean':\n      {\n        return Object.assign({}, base, {\n          name\n        });\n      }\n\n    case 'Array':\n      {\n        return Object.assign({}, base, {\n          name: 'array',\n          value: type.elements.map(convert)\n        });\n      }\n\n    case 'signature':\n      return Object.assign({}, base, convertSig(type));\n\n    case 'union':\n      if (type.elements.every(isLiteral)) {\n        return Object.assign({}, base, {\n          name: 'enum',\n          value: type.elements.map(toEnumOption)\n        });\n      }\n\n      return Object.assign({}, base, {\n        name,\n        value: type.elements.map(convert)\n      });\n\n    case 'intersection':\n      return Object.assign({}, base, {\n        name,\n        value: type.elements.map(convert)\n      });\n\n    default:\n      return Object.assign({}, base, {\n        name: 'other',\n        value: name\n      });\n  }\n};","const QUOTE_REGEX = /^['\"]|['\"]$/g;\nexport const trimQuotes = str => str.replace(QUOTE_REGEX, '');\nexport const includesQuotes = str => QUOTE_REGEX.test(str);","/* eslint-disable no-case-declarations */\nimport mapValues from 'lodash/mapValues';\nimport { includesQuotes, trimQuotes } from '../utils';\nconst SIGNATURE_REGEXP = /^\\(.*\\) => /;\nexport const convert = type => {\n  const {\n    name,\n    raw,\n    computed,\n    value\n  } = type;\n  const base = {};\n  if (typeof raw !== 'undefined') base.raw = raw;\n\n  switch (name) {\n    case 'enum':\n      {\n        const values = computed ? value : value.map(v => {\n          const trimmedValue = trimQuotes(v.value);\n          return includesQuotes(v.value) || Number.isNaN(Number(trimmedValue)) ? trimmedValue : Number(trimmedValue);\n        });\n        return Object.assign({}, base, {\n          name,\n          value: values\n        });\n      }\n\n    case 'string':\n    case 'number':\n    case 'symbol':\n      return Object.assign({}, base, {\n        name\n      });\n\n    case 'func':\n      return Object.assign({}, base, {\n        name: 'function'\n      });\n\n    case 'bool':\n    case 'boolean':\n      return Object.assign({}, base, {\n        name: 'boolean'\n      });\n\n    case 'arrayOf':\n    case 'array':\n      return Object.assign({}, base, {\n        name: 'array',\n        value: value && convert(value)\n      });\n\n    case 'object':\n      return Object.assign({}, base, {\n        name\n      });\n\n    case 'objectOf':\n      return Object.assign({}, base, {\n        name,\n        value: convert(value)\n      });\n\n    case 'shape':\n    case 'exact':\n      const values = mapValues(value, field => convert(field));\n      return Object.assign({}, base, {\n        name: 'object',\n        value: values\n      });\n\n    case 'union':\n      return Object.assign({}, base, {\n        name: 'union',\n        value: value.map(v => convert(v))\n      });\n\n    case 'instanceOf':\n    case 'element':\n    case 'elementType':\n    default:\n      {\n        if (name?.indexOf('|') > 0) {\n          // react-docgen-typescript-plugin doesn't always produce enum-like unions\n          // (like if a user has turned off shouldExtractValuesFromUnion) so here we\n          // try to recover and construct one.\n          try {\n            const literalValues = name.split('|').map(v => JSON.parse(v));\n            return Object.assign({}, base, {\n              name: 'enum',\n              value: literalValues\n            });\n          } catch (err) {// fall through\n          }\n        }\n\n        const otherVal = value ? `${name}(${value})` : name;\n        const otherName = SIGNATURE_REGEXP.test(name) ? 'function' : 'other';\n        return Object.assign({}, base, {\n          name: otherName,\n          value: otherVal\n        });\n      }\n  }\n};","import { convert as tsConvert } from './typescript';\nimport { convert as flowConvert } from './flow';\nimport { convert as propTypesConvert } from './proptypes';\nexport const convert = docgenInfo => {\n  const {\n    type,\n    tsType,\n    flowType\n  } = docgenInfo;\n  if (type != null) return propTypesConvert(type);\n  if (tsType != null) return tsConvert(tsType);\n  if (flowType != null) return flowConvert(flowType);\n  return null;\n};","// eslint-disable-next-line @typescript-eslint/no-empty-interface\n// export type DocgenType = DocgenPropType | DocgenFlowType | DocgenTypeScriptType;\nexport let TypeSystem;\n\n(function (TypeSystem) {\n  TypeSystem[\"JAVASCRIPT\"] = \"JavaScript\";\n  TypeSystem[\"FLOW\"] = \"Flow\";\n  TypeSystem[\"TYPESCRIPT\"] = \"TypeScript\";\n  TypeSystem[\"UNKNOWN\"] = \"Unknown\";\n})(TypeSystem || (TypeSystem = {}));","const BLACKLIST = ['null', 'undefined'];\nexport function isDefaultValueBlacklisted(value) {\n  return BLACKLIST.some(x => x === value);\n}","/* eslint-disable no-underscore-dangle */\nimport { str } from './string';\nexport function hasDocgen(component) {\n  return !!component.__docgenInfo;\n}\nexport function isValidDocgenSection(docgenSection) {\n  return docgenSection != null && Object.keys(docgenSection).length > 0;\n}\nexport function getDocgenSection(component, section) {\n  return hasDocgen(component) ? component.__docgenInfo[section] : null;\n}\nexport function getDocgenDescription(component) {\n  return hasDocgen(component) && str(component.__docgenInfo.description);\n}","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    function isExpression(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'ArrayExpression':\n            case 'AssignmentExpression':\n            case 'BinaryExpression':\n            case 'CallExpression':\n            case 'ConditionalExpression':\n            case 'FunctionExpression':\n            case 'Identifier':\n            case 'Literal':\n            case 'LogicalExpression':\n            case 'MemberExpression':\n            case 'NewExpression':\n            case 'ObjectExpression':\n            case 'SequenceExpression':\n            case 'ThisExpression':\n            case 'UnaryExpression':\n            case 'UpdateExpression':\n                return true;\n        }\n        return false;\n    }\n\n    function isIterationStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'DoWhileStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'WhileStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'BlockStatement':\n            case 'BreakStatement':\n            case 'ContinueStatement':\n            case 'DebuggerStatement':\n            case 'DoWhileStatement':\n            case 'EmptyStatement':\n            case 'ExpressionStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'IfStatement':\n            case 'LabeledStatement':\n            case 'ReturnStatement':\n            case 'SwitchStatement':\n            case 'ThrowStatement':\n            case 'TryStatement':\n            case 'VariableDeclaration':\n            case 'WhileStatement':\n            case 'WithStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isSourceElement(node) {\n      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';\n    }\n\n    function trailingStatement(node) {\n        switch (node.type) {\n        case 'IfStatement':\n            if (node.alternate != null) {\n                return node.alternate;\n            }\n            return node.consequent;\n\n        case 'LabeledStatement':\n        case 'ForStatement':\n        case 'ForInStatement':\n        case 'WhileStatement':\n        case 'WithStatement':\n            return node.body;\n        }\n        return null;\n    }\n\n    function isProblematicIfStatement(node) {\n        var current;\n\n        if (node.type !== 'IfStatement') {\n            return false;\n        }\n        if (node.alternate == null) {\n            return false;\n        }\n        current = node.consequent;\n        do {\n            if (current.type === 'IfStatement') {\n                if (current.alternate == null)  {\n                    return true;\n                }\n            }\n            current = trailingStatement(current);\n        } while (current);\n\n        return false;\n    }\n\n    module.exports = {\n        isExpression: isExpression,\n        isStatement: isStatement,\n        isIterationStatement: isIterationStatement,\n        isSourceElement: isSourceElement,\n        isProblematicIfStatement: isProblematicIfStatement,\n\n        trailingStatement: trailingStatement\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;\n\n    // See `tools/generate-identifier-regex.js`.\n    ES5Regex = {\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\n    };\n\n    ES6Regex = {\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n    };\n\n    function isDecimalDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39;  // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39 ||  // 0..9\n            0x61 <= ch && ch <= 0x66 ||     // a..f\n            0x41 <= ch && ch <= 0x46;       // A..F\n    }\n\n    function isOctalDigit(ch) {\n        return ch >= 0x30 && ch <= 0x37;  // 0..7\n    }\n\n    // 7.2 White Space\n\n    NON_ASCII_WHITESPACES = [\n        0x1680,\n        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,\n        0x202F, 0x205F,\n        0x3000,\n        0xFEFF\n    ];\n\n    function isWhiteSpace(ch) {\n        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||\n            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function fromCodePoint(cp) {\n        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }\n        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);\n        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);\n        return cu1 + cu2;\n    }\n\n    IDENTIFIER_START = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_START[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    IDENTIFIER_PART = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_PART[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch >= 0x30 && ch <= 0x39 ||  // 0..9\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    function isIdentifierStartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierStartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    module.exports = {\n        isDecimalDigit: isDecimalDigit,\n        isHexDigit: isHexDigit,\n        isOctalDigit: isOctalDigit,\n        isWhiteSpace: isWhiteSpace,\n        isLineTerminator: isLineTerminator,\n        isIdentifierStartES5: isIdentifierStartES5,\n        isIdentifierPartES5: isIdentifierPartES5,\n        isIdentifierStartES6: isIdentifierStartES6,\n        isIdentifierPartES6: isIdentifierPartES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var code = require('./code');\n\n    function isStrictModeReservedWordES6(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isKeywordES5(id, strict) {\n        // yield should not be treated as keyword under non-strict mode.\n        if (!strict && id === 'yield') {\n            return false;\n        }\n        return isKeywordES6(id, strict);\n    }\n\n    function isKeywordES6(id, strict) {\n        if (strict && isStrictModeReservedWordES6(id)) {\n            return true;\n        }\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    function isReservedWordES5(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);\n    }\n\n    function isReservedWordES6(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    function isIdentifierNameES5(id) {\n        var i, iz, ch;\n\n        if (id.length === 0) { return false; }\n\n        ch = id.charCodeAt(0);\n        if (!code.isIdentifierStartES5(ch)) {\n            return false;\n        }\n\n        for (i = 1, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (!code.isIdentifierPartES5(ch)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function decodeUtf16(lead, trail) {\n        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n    }\n\n    function isIdentifierNameES6(id) {\n        var i, iz, ch, lowCh, check;\n\n        if (id.length === 0) { return false; }\n\n        check = code.isIdentifierStartES6;\n        for (i = 0, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (0xD800 <= ch && ch <= 0xDBFF) {\n                ++i;\n                if (i >= iz) { return false; }\n                lowCh = id.charCodeAt(i);\n                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {\n                    return false;\n                }\n                ch = decodeUtf16(ch, lowCh);\n            }\n            if (!check(ch)) {\n                return false;\n            }\n            check = code.isIdentifierPartES6;\n        }\n        return true;\n    }\n\n    function isIdentifierES5(id, strict) {\n        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);\n    }\n\n    function isIdentifierES6(id, strict) {\n        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);\n    }\n\n    module.exports = {\n        isKeywordES5: isKeywordES5,\n        isKeywordES6: isKeywordES6,\n        isReservedWordES5: isReservedWordES5,\n        isReservedWordES6: isReservedWordES6,\n        isRestrictedWord: isRestrictedWord,\n        isIdentifierNameES5: isIdentifierNameES5,\n        isIdentifierNameES6: isIdentifierNameES6,\n        isIdentifierES5: isIdentifierES5,\n        isIdentifierES6: isIdentifierES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\n(function () {\n    'use strict';\n\n    exports.ast = require('./ast');\n    exports.code = require('./code');\n    exports.keyword = require('./keyword');\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","function assert(expr, message) {\n  if(!Boolean(expr)) {\n    throw new Error(message || 'unknown assertion error');\n  }\n}\n\nmodule.exports = assert;\n","/*\n * @fileoverview Utilities for Doctrine\n * @author Yusuke Suzuki <utatane.tea@gmail.com>\n */\n\n\n(function () {\n    'use strict';\n\n    var VERSION;\n\n    VERSION = require('../package.json').version;\n    exports.VERSION = VERSION;\n\n    function DoctrineError(message) {\n        this.name = 'DoctrineError';\n        this.message = message;\n    }\n    DoctrineError.prototype = (function () {\n        var Middle = function () { };\n        Middle.prototype = Error.prototype;\n        return new Middle();\n    }());\n    DoctrineError.prototype.constructor = DoctrineError;\n    exports.DoctrineError = DoctrineError;\n\n    function throwError(message) {\n        throw new DoctrineError(message);\n    }\n    exports.throwError = throwError;\n\n    exports.assert = require('assert');\n}());\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n * @fileoverview Type expression parser.\n * @author Yusuke Suzuki <utatane.tea@gmail.com>\n * @author Dan Tao <daniel.tao@gmail.com>\n * @author Andrew Eisenberg <andrew@eisenberg.as>\n */\n\n// \"typed\", the Type Expression Parser for doctrine.\n\n(function () {\n    'use strict';\n\n    var Syntax,\n        Token,\n        source,\n        length,\n        index,\n        previous,\n        token,\n        value,\n        esutils,\n        utility,\n        rangeOffset,\n        addRange;\n\n    esutils = require('esutils');\n    utility = require('./utility');\n\n    Syntax = {\n        NullableLiteral: 'NullableLiteral',\n        AllLiteral: 'AllLiteral',\n        NullLiteral: 'NullLiteral',\n        UndefinedLiteral: 'UndefinedLiteral',\n        VoidLiteral: 'VoidLiteral',\n        UnionType: 'UnionType',\n        ArrayType: 'ArrayType',\n        RecordType: 'RecordType',\n        FieldType: 'FieldType',\n        FunctionType: 'FunctionType',\n        ParameterType: 'ParameterType',\n        RestType: 'RestType',\n        NonNullableType: 'NonNullableType',\n        OptionalType: 'OptionalType',\n        NullableType: 'NullableType',\n        NameExpression: 'NameExpression',\n        TypeApplication: 'TypeApplication',\n        StringLiteralType: 'StringLiteralType',\n        NumericLiteralType: 'NumericLiteralType',\n        BooleanLiteralType: 'BooleanLiteralType'\n    };\n\n    Token = {\n        ILLEGAL: 0,    // ILLEGAL\n        DOT_LT: 1,     // .<\n        REST: 2,       // ...\n        LT: 3,         // <\n        GT: 4,         // >\n        LPAREN: 5,     // (\n        RPAREN: 6,     // )\n        LBRACE: 7,     // {\n        RBRACE: 8,     // }\n        LBRACK: 9,    // [\n        RBRACK: 10,    // ]\n        COMMA: 11,     // ,\n        COLON: 12,     // :\n        STAR: 13,      // *\n        PIPE: 14,      // |\n        QUESTION: 15,  // ?\n        BANG: 16,      // !\n        EQUAL: 17,     // =\n        NAME: 18,      // name token\n        STRING: 19,    // string\n        NUMBER: 20,    // number\n        EOF: 21\n    };\n\n    function isTypeName(ch) {\n        return '><(){}[],:*|?!='.indexOf(String.fromCharCode(ch)) === -1 && !esutils.code.isWhiteSpace(ch) && !esutils.code.isLineTerminator(ch);\n    }\n\n    function Context(previous, index, token, value) {\n        this._previous = previous;\n        this._index = index;\n        this._token = token;\n        this._value = value;\n    }\n\n    Context.prototype.restore = function () {\n        previous = this._previous;\n        index = this._index;\n        token = this._token;\n        value = this._value;\n    };\n\n    Context.save = function () {\n        return new Context(previous, index, token, value);\n    };\n\n    function maybeAddRange(node, range) {\n        if (addRange) {\n            node.range = [range[0] + rangeOffset, range[1] + rangeOffset];\n        }\n        return node;\n    }\n\n    function advance() {\n        var ch = source.charAt(index);\n        index += 1;\n        return ch;\n    }\n\n    function scanHexEscape(prefix) {\n        var i, len, ch, code = 0;\n\n        len = (prefix === 'u') ? 4 : 2;\n        for (i = 0; i < len; ++i) {\n            if (index < length && esutils.code.isHexDigit(source.charCodeAt(index))) {\n                ch = advance();\n                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n            } else {\n                return '';\n            }\n        }\n        return String.fromCharCode(code);\n    }\n\n    function scanString() {\n        var str = '', quote, ch, code, unescaped, restore; //TODO review removal octal = false\n        quote = source.charAt(index);\n        ++index;\n\n        while (index < length) {\n            ch = advance();\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = advance();\n                if (!esutils.code.isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'n':\n                        str += '\\n';\n                        break;\n                    case 'r':\n                        str += '\\r';\n                        break;\n                    case 't':\n                        str += '\\t';\n                        break;\n                    case 'u':\n                    case 'x':\n                        restore = index;\n                        unescaped = scanHexEscape(ch);\n                        if (unescaped) {\n                            str += unescaped;\n                        } else {\n                            index = restore;\n                            str += ch;\n                        }\n                        break;\n                    case 'b':\n                        str += '\\b';\n                        break;\n                    case 'f':\n                        str += '\\f';\n                        break;\n                    case 'v':\n                        str += '\\v';\n                        break;\n\n                    default:\n                        if (esutils.code.isOctalDigit(ch.charCodeAt(0))) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            // Deprecating unused code. TODO review removal\n                            //if (code !== 0) {\n                            //    octal = true;\n                            //}\n\n                            if (index < length && esutils.code.isOctalDigit(source.charCodeAt(index))) {\n                                //TODO Review Removal octal = true;\n                                code = code * 8 + '01234567'.indexOf(advance());\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        esutils.code.isOctalDigit(source.charCodeAt(index))) {\n                                    code = code * 8 + '01234567'.indexOf(advance());\n                                }\n                            }\n                            str += String.fromCharCode(code);\n                        } else {\n                            str += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    if (ch ===  '\\r' && source.charCodeAt(index) === 0x0A  /* '\\n' */) {\n                        ++index;\n                    }\n                }\n            } else if (esutils.code.isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            utility.throwError('unexpected quote');\n        }\n\n        value = str;\n        return Token.STRING;\n    }\n\n    function scanNumber() {\n        var number, ch;\n\n        number = '';\n        ch = source.charCodeAt(index);\n\n        if (ch !== 0x2E  /* '.' */) {\n            number = advance();\n            ch = source.charCodeAt(index);\n\n            if (number === '0') {\n                if (ch === 0x78  /* 'x' */ || ch === 0x58  /* 'X' */) {\n                    number += advance();\n                    while (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (!esutils.code.isHexDigit(ch)) {\n                            break;\n                        }\n                        number += advance();\n                    }\n\n                    if (number.length <= 2) {\n                        // only 0x\n                        utility.throwError('unexpected token');\n                    }\n\n                    if (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (esutils.code.isIdentifierStartES5(ch)) {\n                            utility.throwError('unexpected token');\n                        }\n                    }\n                    value = parseInt(number, 16);\n                    return Token.NUMBER;\n                }\n\n                if (esutils.code.isOctalDigit(ch)) {\n                    number += advance();\n                    while (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (!esutils.code.isOctalDigit(ch)) {\n                            break;\n                        }\n                        number += advance();\n                    }\n\n                    if (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (esutils.code.isIdentifierStartES5(ch) || esutils.code.isDecimalDigit(ch)) {\n                            utility.throwError('unexpected token');\n                        }\n                    }\n                    value = parseInt(number, 8);\n                    return Token.NUMBER;\n                }\n\n                if (esutils.code.isDecimalDigit(ch)) {\n                    utility.throwError('unexpected token');\n                }\n            }\n\n            while (index < length) {\n                ch = source.charCodeAt(index);\n                if (!esutils.code.isDecimalDigit(ch)) {\n                    break;\n                }\n                number += advance();\n            }\n        }\n\n        if (ch === 0x2E  /* '.' */) {\n            number += advance();\n            while (index < length) {\n                ch = source.charCodeAt(index);\n                if (!esutils.code.isDecimalDigit(ch)) {\n                    break;\n                }\n                number += advance();\n            }\n        }\n\n        if (ch === 0x65  /* 'e' */ || ch === 0x45  /* 'E' */) {\n            number += advance();\n\n            ch = source.charCodeAt(index);\n            if (ch === 0x2B  /* '+' */ || ch === 0x2D  /* '-' */) {\n                number += advance();\n            }\n\n            ch = source.charCodeAt(index);\n            if (esutils.code.isDecimalDigit(ch)) {\n                number += advance();\n                while (index < length) {\n                    ch = source.charCodeAt(index);\n                    if (!esutils.code.isDecimalDigit(ch)) {\n                        break;\n                    }\n                    number += advance();\n                }\n            } else {\n                utility.throwError('unexpected token');\n            }\n        }\n\n        if (index < length) {\n            ch = source.charCodeAt(index);\n            if (esutils.code.isIdentifierStartES5(ch)) {\n                utility.throwError('unexpected token');\n            }\n        }\n\n        value = parseFloat(number);\n        return Token.NUMBER;\n    }\n\n\n    function scanTypeName() {\n        var ch, ch2;\n\n        value = advance();\n        while (index < length && isTypeName(source.charCodeAt(index))) {\n            ch = source.charCodeAt(index);\n            if (ch === 0x2E  /* '.' */) {\n                if ((index + 1) >= length) {\n                    return Token.ILLEGAL;\n                }\n                ch2 = source.charCodeAt(index + 1);\n                if (ch2 === 0x3C  /* '<' */) {\n                    break;\n                }\n            }\n            value += advance();\n        }\n        return Token.NAME;\n    }\n\n    function next() {\n        var ch;\n\n        previous = index;\n\n        while (index < length && esutils.code.isWhiteSpace(source.charCodeAt(index))) {\n            advance();\n        }\n        if (index >= length) {\n            token = Token.EOF;\n            return token;\n        }\n\n        ch = source.charCodeAt(index);\n        switch (ch) {\n        case 0x27:  /* ''' */\n        case 0x22:  /* '\"' */\n            token = scanString();\n            return token;\n\n        case 0x3A:  /* ':' */\n            advance();\n            token = Token.COLON;\n            return token;\n\n        case 0x2C:  /* ',' */\n            advance();\n            token = Token.COMMA;\n            return token;\n\n        case 0x28:  /* '(' */\n            advance();\n            token = Token.LPAREN;\n            return token;\n\n        case 0x29:  /* ')' */\n            advance();\n            token = Token.RPAREN;\n            return token;\n\n        case 0x5B:  /* '[' */\n            advance();\n            token = Token.LBRACK;\n            return token;\n\n        case 0x5D:  /* ']' */\n            advance();\n            token = Token.RBRACK;\n            return token;\n\n        case 0x7B:  /* '{' */\n            advance();\n            token = Token.LBRACE;\n            return token;\n\n        case 0x7D:  /* '}' */\n            advance();\n            token = Token.RBRACE;\n            return token;\n\n        case 0x2E:  /* '.' */\n            if (index + 1 < length) {\n                ch = source.charCodeAt(index + 1);\n                if (ch === 0x3C  /* '<' */) {\n                    advance();  // '.'\n                    advance();  // '<'\n                    token = Token.DOT_LT;\n                    return token;\n                }\n\n                if (ch === 0x2E  /* '.' */ && index + 2 < length && source.charCodeAt(index + 2) === 0x2E  /* '.' */) {\n                    advance();  // '.'\n                    advance();  // '.'\n                    advance();  // '.'\n                    token = Token.REST;\n                    return token;\n                }\n\n                if (esutils.code.isDecimalDigit(ch)) {\n                    token = scanNumber();\n                    return token;\n                }\n            }\n            token = Token.ILLEGAL;\n            return token;\n\n        case 0x3C:  /* '<' */\n            advance();\n            token = Token.LT;\n            return token;\n\n        case 0x3E:  /* '>' */\n            advance();\n            token = Token.GT;\n            return token;\n\n        case 0x2A:  /* '*' */\n            advance();\n            token = Token.STAR;\n            return token;\n\n        case 0x7C:  /* '|' */\n            advance();\n            token = Token.PIPE;\n            return token;\n\n        case 0x3F:  /* '?' */\n            advance();\n            token = Token.QUESTION;\n            return token;\n\n        case 0x21:  /* '!' */\n            advance();\n            token = Token.BANG;\n            return token;\n\n        case 0x3D:  /* '=' */\n            advance();\n            token = Token.EQUAL;\n            return token;\n\n        case 0x2D: /* '-' */\n            token = scanNumber();\n            return token;\n\n        default:\n            if (esutils.code.isDecimalDigit(ch)) {\n                token = scanNumber();\n                return token;\n            }\n\n            // type string permits following case,\n            //\n            // namespace.module.MyClass\n            //\n            // this reduced 1 token TK_NAME\n            utility.assert(isTypeName(ch));\n            token = scanTypeName();\n            return token;\n        }\n    }\n\n    function consume(target, text) {\n        utility.assert(token === target, text || 'consumed token not matched');\n        next();\n    }\n\n    function expect(target, message) {\n        if (token !== target) {\n            utility.throwError(message || 'unexpected token');\n        }\n        next();\n    }\n\n    // UnionType := '(' TypeUnionList ')'\n    //\n    // TypeUnionList :=\n    //     <<empty>>\n    //   | NonemptyTypeUnionList\n    //\n    // NonemptyTypeUnionList :=\n    //     TypeExpression\n    //   | TypeExpression '|' NonemptyTypeUnionList\n    function parseUnionType() {\n        var elements, startIndex = index - 1;\n        consume(Token.LPAREN, 'UnionType should start with (');\n        elements = [];\n        if (token !== Token.RPAREN) {\n            while (true) {\n                elements.push(parseTypeExpression());\n                if (token === Token.RPAREN) {\n                    break;\n                }\n                expect(Token.PIPE);\n            }\n        }\n        consume(Token.RPAREN, 'UnionType should end with )');\n        return maybeAddRange({\n            type: Syntax.UnionType,\n            elements: elements\n        }, [startIndex, previous]);\n    }\n\n    // ArrayType := '[' ElementTypeList ']'\n    //\n    // ElementTypeList :=\n    //     <<empty>>\n    //  | TypeExpression\n    //  | '...' TypeExpression\n    //  | TypeExpression ',' ElementTypeList\n    function parseArrayType() {\n        var elements, startIndex = index - 1, restStartIndex;\n        consume(Token.LBRACK, 'ArrayType should start with [');\n        elements = [];\n        while (token !== Token.RBRACK) {\n            if (token === Token.REST) {\n                restStartIndex = index - 3;\n                consume(Token.REST);\n                elements.push(maybeAddRange({\n                    type: Syntax.RestType,\n                    expression: parseTypeExpression()\n                }, [restStartIndex, previous]));\n                break;\n            } else {\n                elements.push(parseTypeExpression());\n            }\n            if (token !== Token.RBRACK) {\n                expect(Token.COMMA);\n            }\n        }\n        expect(Token.RBRACK);\n        return maybeAddRange({\n            type: Syntax.ArrayType,\n            elements: elements\n        }, [startIndex, previous]);\n    }\n\n    function parseFieldName() {\n        var v = value;\n        if (token === Token.NAME || token === Token.STRING) {\n            next();\n            return v;\n        }\n\n        if (token === Token.NUMBER) {\n            consume(Token.NUMBER);\n            return String(v);\n        }\n\n        utility.throwError('unexpected token');\n    }\n\n    // FieldType :=\n    //     FieldName\n    //   | FieldName ':' TypeExpression\n    //\n    // FieldName :=\n    //     NameExpression\n    //   | StringLiteral\n    //   | NumberLiteral\n    //   | ReservedIdentifier\n    function parseFieldType() {\n        var key, rangeStart = previous;\n\n        key = parseFieldName();\n        if (token === Token.COLON) {\n            consume(Token.COLON);\n            return maybeAddRange({\n                type: Syntax.FieldType,\n                key: key,\n                value: parseTypeExpression()\n            }, [rangeStart, previous]);\n        }\n        return maybeAddRange({\n            type: Syntax.FieldType,\n            key: key,\n            value: null\n        }, [rangeStart, previous]);\n    }\n\n    // RecordType := '{' FieldTypeList '}'\n    //\n    // FieldTypeList :=\n    //     <<empty>>\n    //   | FieldType\n    //   | FieldType ',' FieldTypeList\n    function parseRecordType() {\n        var fields, rangeStart = index - 1, rangeEnd;\n\n        consume(Token.LBRACE, 'RecordType should start with {');\n        fields = [];\n        if (token === Token.COMMA) {\n            consume(Token.COMMA);\n        } else {\n            while (token !== Token.RBRACE) {\n                fields.push(parseFieldType());\n                if (token !== Token.RBRACE) {\n                    expect(Token.COMMA);\n                }\n            }\n        }\n        rangeEnd = index;\n        expect(Token.RBRACE);\n        return maybeAddRange({\n            type: Syntax.RecordType,\n            fields: fields\n        }, [rangeStart, rangeEnd]);\n    }\n\n    // NameExpression :=\n    //    Identifier\n    //  | TagIdentifier ':' Identifier\n    //\n    // Tag identifier is one of \"module\", \"external\" or \"event\"\n    // Identifier is the same as Token.NAME, including any dots, something like\n    // namespace.module.MyClass\n    function parseNameExpression() {\n        var name = value, rangeStart = index - name.length;\n        expect(Token.NAME);\n\n        if (token === Token.COLON && (\n                name === 'module' ||\n                name === 'external' ||\n                name === 'event')) {\n            consume(Token.COLON);\n            name += ':' + value;\n            expect(Token.NAME);\n        }\n\n        return maybeAddRange({\n            type: Syntax.NameExpression,\n            name: name\n        }, [rangeStart, previous]);\n    }\n\n    // TypeExpressionList :=\n    //     TopLevelTypeExpression\n    //   | TopLevelTypeExpression ',' TypeExpressionList\n    function parseTypeExpressionList() {\n        var elements = [];\n\n        elements.push(parseTop());\n        while (token === Token.COMMA) {\n            consume(Token.COMMA);\n            elements.push(parseTop());\n        }\n        return elements;\n    }\n\n    // TypeName :=\n    //     NameExpression\n    //   | NameExpression TypeApplication\n    //\n    // TypeApplication :=\n    //     '.<' TypeExpressionList '>'\n    //   | '<' TypeExpressionList '>'   // this is extension of doctrine\n    function parseTypeName() {\n        var expr, applications, startIndex = index - value.length;\n\n        expr = parseNameExpression();\n        if (token === Token.DOT_LT || token === Token.LT) {\n            next();\n            applications = parseTypeExpressionList();\n            expect(Token.GT);\n            return maybeAddRange({\n                type: Syntax.TypeApplication,\n                expression: expr,\n                applications: applications\n            }, [startIndex, previous]);\n        }\n        return expr;\n    }\n\n    // ResultType :=\n    //     <<empty>>\n    //   | ':' void\n    //   | ':' TypeExpression\n    //\n    // BNF is above\n    // but, we remove <<empty>> pattern, so token is always TypeToken::COLON\n    function parseResultType() {\n        consume(Token.COLON, 'ResultType should start with :');\n        if (token === Token.NAME && value === 'void') {\n            consume(Token.NAME);\n            return {\n                type: Syntax.VoidLiteral\n            };\n        }\n        return parseTypeExpression();\n    }\n\n    // ParametersType :=\n    //     RestParameterType\n    //   | NonRestParametersType\n    //   | NonRestParametersType ',' RestParameterType\n    //\n    // RestParameterType :=\n    //     '...'\n    //     '...' Identifier\n    //\n    // NonRestParametersType :=\n    //     ParameterType ',' NonRestParametersType\n    //   | ParameterType\n    //   | OptionalParametersType\n    //\n    // OptionalParametersType :=\n    //     OptionalParameterType\n    //   | OptionalParameterType, OptionalParametersType\n    //\n    // OptionalParameterType := ParameterType=\n    //\n    // ParameterType := TypeExpression | Identifier ':' TypeExpression\n    //\n    // Identifier is \"new\" or \"this\"\n    function parseParametersType() {\n        var params = [], optionalSequence = false, expr, rest = false, startIndex, restStartIndex = index - 3, nameStartIndex;\n\n        while (token !== Token.RPAREN) {\n            if (token === Token.REST) {\n                // RestParameterType\n                consume(Token.REST);\n                rest = true;\n            }\n\n            startIndex = previous;\n\n            expr = parseTypeExpression();\n            if (expr.type === Syntax.NameExpression && token === Token.COLON) {\n                nameStartIndex = previous - expr.name.length;\n                // Identifier ':' TypeExpression\n                consume(Token.COLON);\n                expr = maybeAddRange({\n                    type: Syntax.ParameterType,\n                    name: expr.name,\n                    expression: parseTypeExpression()\n                }, [nameStartIndex, previous]);\n            }\n            if (token === Token.EQUAL) {\n                consume(Token.EQUAL);\n                expr = maybeAddRange({\n                    type: Syntax.OptionalType,\n                    expression: expr\n                }, [startIndex, previous]);\n                optionalSequence = true;\n            } else {\n                if (optionalSequence) {\n                    utility.throwError('unexpected token');\n                }\n            }\n            if (rest) {\n                expr = maybeAddRange({\n                    type: Syntax.RestType,\n                    expression: expr\n                }, [restStartIndex, previous]);\n            }\n            params.push(expr);\n            if (token !== Token.RPAREN) {\n                expect(Token.COMMA);\n            }\n        }\n        return params;\n    }\n\n    // FunctionType := 'function' FunctionSignatureType\n    //\n    // FunctionSignatureType :=\n    //   | TypeParameters '(' ')' ResultType\n    //   | TypeParameters '(' ParametersType ')' ResultType\n    //   | TypeParameters '(' 'this' ':' TypeName ')' ResultType\n    //   | TypeParameters '(' 'this' ':' TypeName ',' ParametersType ')' ResultType\n    function parseFunctionType() {\n        var isNew, thisBinding, params, result, fnType, startIndex = index - value.length;\n        utility.assert(token === Token.NAME && value === 'function', 'FunctionType should start with \\'function\\'');\n        consume(Token.NAME);\n\n        // Google Closure Compiler is not implementing TypeParameters.\n        // So we do not. if we don't get '(', we see it as error.\n        expect(Token.LPAREN);\n\n        isNew = false;\n        params = [];\n        thisBinding = null;\n        if (token !== Token.RPAREN) {\n            // ParametersType or 'this'\n            if (token === Token.NAME &&\n                    (value === 'this' || value === 'new')) {\n                // 'this' or 'new'\n                // 'new' is Closure Compiler extension\n                isNew = value === 'new';\n                consume(Token.NAME);\n                expect(Token.COLON);\n                thisBinding = parseTypeName();\n                if (token === Token.COMMA) {\n                    consume(Token.COMMA);\n                    params = parseParametersType();\n                }\n            } else {\n                params = parseParametersType();\n            }\n        }\n\n        expect(Token.RPAREN);\n\n        result = null;\n        if (token === Token.COLON) {\n            result = parseResultType();\n        }\n\n        fnType = maybeAddRange({\n            type: Syntax.FunctionType,\n            params: params,\n            result: result\n        }, [startIndex, previous]);\n        if (thisBinding) {\n            // avoid adding null 'new' and 'this' properties\n            fnType['this'] = thisBinding;\n            if (isNew) {\n                fnType['new'] = true;\n            }\n        }\n        return fnType;\n    }\n\n    // BasicTypeExpression :=\n    //     '*'\n    //   | 'null'\n    //   | 'undefined'\n    //   | TypeName\n    //   | FunctionType\n    //   | UnionType\n    //   | RecordType\n    //   | ArrayType\n    function parseBasicTypeExpression() {\n        var context, startIndex;\n        switch (token) {\n        case Token.STAR:\n            consume(Token.STAR);\n            return maybeAddRange({\n                type: Syntax.AllLiteral\n            }, [previous - 1, previous]);\n\n        case Token.LPAREN:\n            return parseUnionType();\n\n        case Token.LBRACK:\n            return parseArrayType();\n\n        case Token.LBRACE:\n            return parseRecordType();\n\n        case Token.NAME:\n            startIndex = index - value.length;\n\n            if (value === 'null') {\n                consume(Token.NAME);\n                return maybeAddRange({\n                    type: Syntax.NullLiteral\n                }, [startIndex, previous]);\n            }\n\n            if (value === 'undefined') {\n                consume(Token.NAME);\n                return maybeAddRange({\n                    type: Syntax.UndefinedLiteral\n                }, [startIndex, previous]);\n            }\n\n            if (value === 'true' || value === 'false') {\n                consume(Token.NAME);\n                return maybeAddRange({\n                    type: Syntax.BooleanLiteralType,\n                    value: value === 'true'\n                }, [startIndex, previous]);\n            }\n\n            context = Context.save();\n            if (value === 'function') {\n                try {\n                    return parseFunctionType();\n                } catch (e) {\n                    context.restore();\n                }\n            }\n\n            return parseTypeName();\n\n        case Token.STRING:\n            next();\n            return maybeAddRange({\n                type: Syntax.StringLiteralType,\n                value: value\n            }, [previous - value.length - 2, previous]);\n\n        case Token.NUMBER:\n            next();\n            return maybeAddRange({\n                type: Syntax.NumericLiteralType,\n                value: value\n            }, [previous - String(value).length, previous]);\n\n        default:\n            utility.throwError('unexpected token');\n        }\n    }\n\n    // TypeExpression :=\n    //     BasicTypeExpression\n    //   | '?' BasicTypeExpression\n    //   | '!' BasicTypeExpression\n    //   | BasicTypeExpression '?'\n    //   | BasicTypeExpression '!'\n    //   | '?'\n    //   | BasicTypeExpression '[]'\n    function parseTypeExpression() {\n        var expr, rangeStart;\n\n        if (token === Token.QUESTION) {\n            rangeStart = index - 1;\n            consume(Token.QUESTION);\n            if (token === Token.COMMA || token === Token.EQUAL || token === Token.RBRACE ||\n                    token === Token.RPAREN || token === Token.PIPE || token === Token.EOF ||\n                    token === Token.RBRACK || token === Token.GT) {\n                return maybeAddRange({\n                    type: Syntax.NullableLiteral\n                }, [rangeStart, previous]);\n            }\n            return maybeAddRange({\n                type: Syntax.NullableType,\n                expression: parseBasicTypeExpression(),\n                prefix: true\n            }, [rangeStart, previous]);\n        } else if (token === Token.BANG) {\n            rangeStart = index - 1;\n            consume(Token.BANG);\n            return maybeAddRange({\n                type: Syntax.NonNullableType,\n                expression: parseBasicTypeExpression(),\n                prefix: true\n            }, [rangeStart, previous]);\n        } else {\n            rangeStart = previous;\n        }\n\n        expr = parseBasicTypeExpression();\n        if (token === Token.BANG) {\n            consume(Token.BANG);\n            return maybeAddRange({\n                type: Syntax.NonNullableType,\n                expression: expr,\n                prefix: false\n            }, [rangeStart, previous]);\n        }\n\n        if (token === Token.QUESTION) {\n            consume(Token.QUESTION);\n            return maybeAddRange({\n                type: Syntax.NullableType,\n                expression: expr,\n                prefix: false\n            }, [rangeStart, previous]);\n        }\n\n        if (token === Token.LBRACK) {\n            consume(Token.LBRACK);\n            expect(Token.RBRACK, 'expected an array-style type declaration (' + value + '[])');\n            return maybeAddRange({\n                type: Syntax.TypeApplication,\n                expression: maybeAddRange({\n                    type: Syntax.NameExpression,\n                    name: 'Array'\n                }, [rangeStart, previous]),\n                applications: [expr]\n            }, [rangeStart, previous]);\n        }\n\n        return expr;\n    }\n\n    // TopLevelTypeExpression :=\n    //      TypeExpression\n    //    | TypeUnionList\n    //\n    // This rule is Google Closure Compiler extension, not ES4\n    // like,\n    //   { number | string }\n    // If strict to ES4, we should write it as\n    //   { (number|string) }\n    function parseTop() {\n        var expr, elements;\n\n        expr = parseTypeExpression();\n        if (token !== Token.PIPE) {\n            return expr;\n        }\n\n        elements = [expr];\n        consume(Token.PIPE);\n        while (true) {\n            elements.push(parseTypeExpression());\n            if (token !== Token.PIPE) {\n                break;\n            }\n            consume(Token.PIPE);\n        }\n\n        return maybeAddRange({\n            type: Syntax.UnionType,\n            elements: elements\n        }, [0, index]);\n    }\n\n    function parseTopParamType() {\n        var expr;\n\n        if (token === Token.REST) {\n            consume(Token.REST);\n            return maybeAddRange({\n                type: Syntax.RestType,\n                expression: parseTop()\n            }, [0, index]);\n        }\n\n        expr = parseTop();\n        if (token === Token.EQUAL) {\n            consume(Token.EQUAL);\n            return maybeAddRange({\n                type: Syntax.OptionalType,\n                expression: expr\n            }, [0, index]);\n        }\n\n        return expr;\n    }\n\n    function parseType(src, opt) {\n        var expr;\n\n        source = src;\n        length = source.length;\n        index = 0;\n        previous = 0;\n        addRange = opt && opt.range;\n        rangeOffset = opt && opt.startIndex || 0;\n\n        next();\n        expr = parseTop();\n\n        if (opt && opt.midstream) {\n            return {\n                expression: expr,\n                index: previous\n            };\n        }\n\n        if (token !== Token.EOF) {\n            utility.throwError('not reach to EOF');\n        }\n\n        return expr;\n    }\n\n    function parseParamType(src, opt) {\n        var expr;\n\n        source = src;\n        length = source.length;\n        index = 0;\n        previous = 0;\n        addRange = opt && opt.range;\n        rangeOffset = opt && opt.startIndex || 0;\n\n        next();\n        expr = parseTopParamType();\n\n        if (opt && opt.midstream) {\n            return {\n                expression: expr,\n                index: previous\n            };\n        }\n\n        if (token !== Token.EOF) {\n            utility.throwError('not reach to EOF');\n        }\n\n        return expr;\n    }\n\n    function stringifyImpl(node, compact, topLevel) {\n        var result, i, iz;\n\n        switch (node.type) {\n        case Syntax.NullableLiteral:\n            result = '?';\n            break;\n\n        case Syntax.AllLiteral:\n            result = '*';\n            break;\n\n        case Syntax.NullLiteral:\n            result = 'null';\n            break;\n\n        case Syntax.UndefinedLiteral:\n            result = 'undefined';\n            break;\n\n        case Syntax.VoidLiteral:\n            result = 'void';\n            break;\n\n        case Syntax.UnionType:\n            if (!topLevel) {\n                result = '(';\n            } else {\n                result = '';\n            }\n\n            for (i = 0, iz = node.elements.length; i < iz; ++i) {\n                result += stringifyImpl(node.elements[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? '|' : ' | ';\n                }\n            }\n\n            if (!topLevel) {\n                result += ')';\n            }\n            break;\n\n        case Syntax.ArrayType:\n            result = '[';\n            for (i = 0, iz = node.elements.length; i < iz; ++i) {\n                result += stringifyImpl(node.elements[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n            result += ']';\n            break;\n\n        case Syntax.RecordType:\n            result = '{';\n            for (i = 0, iz = node.fields.length; i < iz; ++i) {\n                result += stringifyImpl(node.fields[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n            result += '}';\n            break;\n\n        case Syntax.FieldType:\n            if (node.value) {\n                result = node.key + (compact ? ':' : ': ') + stringifyImpl(node.value, compact);\n            } else {\n                result = node.key;\n            }\n            break;\n\n        case Syntax.FunctionType:\n            result = compact ? 'function(' : 'function (';\n\n            if (node['this']) {\n                if (node['new']) {\n                    result += (compact ? 'new:' : 'new: ');\n                } else {\n                    result += (compact ? 'this:' : 'this: ');\n                }\n\n                result += stringifyImpl(node['this'], compact);\n\n                if (node.params.length !== 0) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n\n            for (i = 0, iz = node.params.length; i < iz; ++i) {\n                result += stringifyImpl(node.params[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n\n            result += ')';\n\n            if (node.result) {\n                result += (compact ? ':' : ': ') + stringifyImpl(node.result, compact);\n            }\n            break;\n\n        case Syntax.ParameterType:\n            result = node.name + (compact ? ':' : ': ') + stringifyImpl(node.expression, compact);\n            break;\n\n        case Syntax.RestType:\n            result = '...';\n            if (node.expression) {\n                result += stringifyImpl(node.expression, compact);\n            }\n            break;\n\n        case Syntax.NonNullableType:\n            if (node.prefix) {\n                result = '!' + stringifyImpl(node.expression, compact);\n            } else {\n                result = stringifyImpl(node.expression, compact) + '!';\n            }\n            break;\n\n        case Syntax.OptionalType:\n            result = stringifyImpl(node.expression, compact) + '=';\n            break;\n\n        case Syntax.NullableType:\n            if (node.prefix) {\n                result = '?' + stringifyImpl(node.expression, compact);\n            } else {\n                result = stringifyImpl(node.expression, compact) + '?';\n            }\n            break;\n\n        case Syntax.NameExpression:\n            result = node.name;\n            break;\n\n        case Syntax.TypeApplication:\n            result = stringifyImpl(node.expression, compact) + '.<';\n            for (i = 0, iz = node.applications.length; i < iz; ++i) {\n                result += stringifyImpl(node.applications[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n            result += '>';\n            break;\n\n        case Syntax.StringLiteralType:\n            result = '\"' + node.value + '\"';\n            break;\n\n        case Syntax.NumericLiteralType:\n            result = String(node.value);\n            break;\n\n        case Syntax.BooleanLiteralType:\n            result = String(node.value);\n            break;\n\n        default:\n            utility.throwError('Unknown type ' + node.type);\n        }\n\n        return result;\n    }\n\n    function stringify(node, options) {\n        if (options == null) {\n            options = {};\n        }\n        return stringifyImpl(node, options.compact, options.topLevel);\n    }\n\n    exports.parseType = parseType;\n    exports.parseParamType = parseParamType;\n    exports.stringify = stringify;\n    exports.Syntax = Syntax;\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","/*\n * @fileoverview Main Doctrine object\n * @author Yusuke Suzuki <utatane.tea@gmail.com>\n * @author Dan Tao <daniel.tao@gmail.com>\n * @author Andrew Eisenberg <andrew@eisenberg.as>\n */\n\n(function () {\n    'use strict';\n\n    var typed,\n        utility,\n        jsdoc,\n        esutils,\n        hasOwnProperty;\n\n    esutils = require('esutils');\n    typed = require('./typed');\n    utility = require('./utility');\n\n    function sliceSource(source, index, last) {\n        return source.slice(index, last);\n    }\n\n    hasOwnProperty = (function () {\n        var func = Object.prototype.hasOwnProperty;\n        return function hasOwnProperty(obj, name) {\n            return func.call(obj, name);\n        };\n    }());\n    function shallowCopy(obj) {\n        var ret = {}, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n\n    function isASCIIAlphanumeric(ch) {\n        return (ch >= 0x61  /* 'a' */ && ch <= 0x7A  /* 'z' */) ||\n            (ch >= 0x41  /* 'A' */ && ch <= 0x5A  /* 'Z' */) ||\n            (ch >= 0x30  /* '0' */ && ch <= 0x39  /* '9' */);\n    }\n\n    function isParamTitle(title) {\n        return title === 'param' || title === 'argument' || title === 'arg';\n    }\n\n    function isReturnTitle(title) {\n        return title === 'return' || title === 'returns';\n    }\n\n    function isProperty(title) {\n        return title === 'property' || title === 'prop';\n    }\n\n    function isNameParameterRequired(title) {\n        return isParamTitle(title) || isProperty(title) ||\n            title === 'alias' || title === 'this' || title === 'mixes' || title === 'requires';\n    }\n\n    function isAllowedName(title) {\n        return isNameParameterRequired(title) || title === 'const' || title === 'constant';\n    }\n\n    function isAllowedNested(title) {\n        return isProperty(title) || isParamTitle(title);\n    }\n\n    function isAllowedOptional(title) {\n        return isProperty(title) || isParamTitle(title);\n    }\n\n    function isTypeParameterRequired(title) {\n        return isParamTitle(title) || isReturnTitle(title) ||\n            title === 'define' || title === 'enum' ||\n            title === 'implements' || title === 'this' ||\n            title === 'type' || title === 'typedef' || isProperty(title);\n    }\n\n    // Consider deprecation instead using 'isTypeParameterRequired' and 'Rules' declaration to pick when a type is optional/required\n    // This would require changes to 'parseType'\n    function isAllowedType(title) {\n        return isTypeParameterRequired(title) || title === 'throws' || title === 'const' || title === 'constant' ||\n            title === 'namespace' || title === 'member' || title === 'var' || title === 'module' ||\n            title === 'constructor' || title === 'class' || title === 'extends' || title === 'augments' ||\n            title === 'public' || title === 'private' || title === 'protected';\n    }\n\n    // A regex character class that contains all whitespace except linebreak characters (\\r, \\n, \\u2028, \\u2029)\n    var WHITESPACE = '[ \\\\f\\\\t\\\\v\\\\u00a0\\\\u1680\\\\u180e\\\\u2000-\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]';\n\n    var STAR_MATCHER = '(' + WHITESPACE + '*(?:\\\\*' + WHITESPACE + '?)?)(.+|[\\r\\n\\u2028\\u2029])';\n\n    function unwrapComment(doc) {\n        // JSDoc comment is following form\n        //   /**\n        //    * .......\n        //    */\n\n        return doc.\n            // remove /**\n            replace(/^\\/\\*\\*?/, '').\n            // remove */\n            replace(/\\*\\/$/, '').\n            // remove ' * ' at the beginning of a line\n            replace(new RegExp(STAR_MATCHER, 'g'), '$2').\n            // remove trailing whitespace\n            replace(/\\s*$/, '');\n    }\n\n    /**\n     * Converts an index in an \"unwrapped\" JSDoc comment to the corresponding index in the original \"wrapped\" version\n     * @param {string} originalSource The original wrapped comment\n     * @param {number} unwrappedIndex The index of a character in the unwrapped string\n     * @returns {number} The index of the corresponding character in the original wrapped string\n     */\n    function convertUnwrappedCommentIndex(originalSource, unwrappedIndex) {\n        var replacedSource = originalSource.replace(/^\\/\\*\\*?/, '');\n        var numSkippedChars = 0;\n        var matcher = new RegExp(STAR_MATCHER, 'g');\n        var match;\n\n        while ((match = matcher.exec(replacedSource))) {\n            numSkippedChars += match[1].length;\n\n            if (match.index + match[0].length > unwrappedIndex + numSkippedChars) {\n                return unwrappedIndex + numSkippedChars + originalSource.length - replacedSource.length;\n            }\n        }\n\n        return originalSource.replace(/\\*\\/$/, '').replace(/\\s*$/, '').length;\n    }\n\n    // JSDoc Tag Parser\n\n    (function (exports) {\n        var Rules,\n            index,\n            lineNumber,\n            length,\n            source,\n            originalSource,\n            recoverable,\n            sloppy,\n            strict;\n\n        function advance() {\n            var ch = source.charCodeAt(index);\n            index += 1;\n            if (esutils.code.isLineTerminator(ch) && !(ch === 0x0D  /* '\\r' */ && source.charCodeAt(index) === 0x0A  /* '\\n' */)) {\n                lineNumber += 1;\n            }\n            return String.fromCharCode(ch);\n        }\n\n        function scanTitle() {\n            var title = '';\n            // waste '@'\n            advance();\n\n            while (index < length && isASCIIAlphanumeric(source.charCodeAt(index))) {\n                title += advance();\n            }\n\n            return title;\n        }\n\n        function seekContent() {\n            var ch, waiting, last = index;\n\n            waiting = false;\n            while (last < length) {\n                ch = source.charCodeAt(last);\n                if (esutils.code.isLineTerminator(ch) && !(ch === 0x0D  /* '\\r' */ && source.charCodeAt(last + 1) === 0x0A  /* '\\n' */)) {\n                    waiting = true;\n                } else if (waiting) {\n                    if (ch === 0x40  /* '@' */) {\n                        break;\n                    }\n                    if (!esutils.code.isWhiteSpace(ch)) {\n                        waiting = false;\n                    }\n                }\n                last += 1;\n            }\n            return last;\n        }\n\n        // type expression may have nest brace, such as,\n        // { { ok: string } }\n        //\n        // therefore, scanning type expression with balancing braces.\n        function parseType(title, last, addRange) {\n            var ch, brace, type, startIndex, direct = false;\n\n\n            // search '{'\n            while (index < last) {\n                ch = source.charCodeAt(index);\n                if (esutils.code.isWhiteSpace(ch)) {\n                    advance();\n                } else if (ch === 0x7B  /* '{' */) {\n                    advance();\n                    break;\n                } else {\n                    // this is direct pattern\n                    direct = true;\n                    break;\n                }\n            }\n\n\n            if (direct) {\n                return null;\n            }\n\n            // type expression { is found\n            brace = 1;\n            type = '';\n            while (index < last) {\n                ch = source.charCodeAt(index);\n                if (esutils.code.isLineTerminator(ch)) {\n                    advance();\n                } else {\n                    if (ch === 0x7D  /* '}' */) {\n                        brace -= 1;\n                        if (brace === 0) {\n                            advance();\n                            break;\n                        }\n                    } else if (ch === 0x7B  /* '{' */) {\n                        brace += 1;\n                    }\n                    if (type === '') {\n                        startIndex = index;\n                    }\n                    type += advance();\n                }\n            }\n\n            if (brace !== 0) {\n                // braces is not balanced\n                return utility.throwError('Braces are not balanced');\n            }\n\n            if (isAllowedOptional(title)) {\n                return typed.parseParamType(type, {startIndex: convertIndex(startIndex), range: addRange});\n            }\n\n            return typed.parseType(type, {startIndex: convertIndex(startIndex), range: addRange});\n        }\n\n        function scanIdentifier(last) {\n            var identifier;\n            if (!esutils.code.isIdentifierStartES5(source.charCodeAt(index)) && !source[index].match(/[0-9]/)) {\n                return null;\n            }\n            identifier = advance();\n            while (index < last && esutils.code.isIdentifierPartES5(source.charCodeAt(index))) {\n                identifier += advance();\n            }\n            return identifier;\n        }\n\n        function skipWhiteSpace(last) {\n            while (index < last && (esutils.code.isWhiteSpace(source.charCodeAt(index)) || esutils.code.isLineTerminator(source.charCodeAt(index)))) {\n                advance();\n            }\n        }\n\n        function parseName(last, allowBrackets, allowNestedParams) {\n            var name = '',\n                useBrackets,\n                insideString;\n\n\n            skipWhiteSpace(last);\n\n            if (index >= last) {\n                return null;\n            }\n\n            if (source.charCodeAt(index) === 0x5B  /* '[' */) {\n                if (allowBrackets) {\n                    useBrackets = true;\n                    name = advance();\n                } else {\n                    return null;\n                }\n            }\n\n            name += scanIdentifier(last);\n\n            if (allowNestedParams) {\n                if (source.charCodeAt(index) === 0x3A /* ':' */ && (\n                        name === 'module' ||\n                        name === 'external' ||\n                        name === 'event')) {\n                    name += advance();\n                    name += scanIdentifier(last);\n\n                }\n                if(source.charCodeAt(index) === 0x5B  /* '[' */ && source.charCodeAt(index + 1) === 0x5D  /* ']' */){\n                    name += advance();\n                    name += advance();\n                }\n                while (source.charCodeAt(index) === 0x2E  /* '.' */ ||\n                        source.charCodeAt(index) === 0x2F  /* '/' */ ||\n                        source.charCodeAt(index) === 0x23  /* '#' */ ||\n                        source.charCodeAt(index) === 0x2D  /* '-' */ ||\n                        source.charCodeAt(index) === 0x7E  /* '~' */) {\n                    name += advance();\n                    name += scanIdentifier(last);\n                }\n            }\n\n            if (useBrackets) {\n                skipWhiteSpace(last);\n                // do we have a default value for this?\n                if (source.charCodeAt(index) === 0x3D  /* '=' */) {\n                    // consume the '='' symbol\n                    name += advance();\n                    skipWhiteSpace(last);\n\n                    var ch;\n                    var bracketDepth = 1;\n\n                    // scan in the default value\n                    while (index < last) {\n                        ch = source.charCodeAt(index);\n\n                        if (esutils.code.isWhiteSpace(ch)) {\n                            if (!insideString) {\n                                skipWhiteSpace(last);\n                                ch = source.charCodeAt(index);\n                            }\n                        }\n\n                        if (ch === 0x27 /* ''' */) {\n                            if (!insideString) {\n                                insideString = '\\'';\n                            } else {\n                                if (insideString === '\\'') {\n                                    insideString = '';\n                                }\n                            }\n                        }\n\n                        if (ch === 0x22 /* '\"' */) {\n                            if (!insideString) {\n                                insideString = '\"';\n                            } else {\n                                if (insideString === '\"') {\n                                    insideString = '';\n                                }\n                            }\n                        }\n\n                        if (ch === 0x5B /* '[' */) {\n                            bracketDepth++;\n                        } else if (ch === 0x5D  /* ']' */ &&\n                            --bracketDepth === 0) {\n                            break;\n                        }\n\n                        name += advance();\n                    }\n                }\n\n                skipWhiteSpace(last);\n\n                if (index >= last || source.charCodeAt(index) !== 0x5D  /* ']' */) {\n                    // we never found a closing ']'\n                    return null;\n                }\n\n                // collect the last ']'\n                name += advance();\n            }\n\n            return name;\n        }\n\n        function skipToTag() {\n            while (index < length && source.charCodeAt(index) !== 0x40  /* '@' */) {\n                advance();\n            }\n            if (index >= length) {\n                return false;\n            }\n            utility.assert(source.charCodeAt(index) === 0x40  /* '@' */);\n            return true;\n        }\n\n        function convertIndex(rangeIndex) {\n            if (source === originalSource) {\n                return rangeIndex;\n            }\n            return convertUnwrappedCommentIndex(originalSource, rangeIndex);\n        }\n\n        function TagParser(options, title) {\n            this._options = options;\n            this._title = title.toLowerCase();\n            this._tag = {\n                title: title,\n                description: null\n            };\n            if (this._options.lineNumbers) {\n                this._tag.lineNumber = lineNumber;\n            }\n            this._first = index - title.length - 1;\n            this._last = 0;\n            // space to save special information for title parsers.\n            this._extra = { };\n        }\n\n        // addError(err, ...)\n        TagParser.prototype.addError = function addError(errorText) {\n            var args = Array.prototype.slice.call(arguments, 1),\n                msg = errorText.replace(\n                    /%(\\d)/g,\n                    function (whole, index) {\n                        utility.assert(index < args.length, 'Message reference must be in range');\n                        return args[index];\n                    }\n                );\n\n            if (!this._tag.errors) {\n                this._tag.errors = [];\n            }\n            if (strict) {\n                utility.throwError(msg);\n            }\n            this._tag.errors.push(msg);\n            return recoverable;\n        };\n\n        TagParser.prototype.parseType = function () {\n            // type required titles\n            if (isTypeParameterRequired(this._title)) {\n                try {\n                    this._tag.type = parseType(this._title, this._last, this._options.range);\n                    if (!this._tag.type) {\n                        if (!isParamTitle(this._title) && !isReturnTitle(this._title)) {\n                            if (!this.addError('Missing or invalid tag type')) {\n                                return false;\n                            }\n                        }\n                    }\n                } catch (error) {\n                    this._tag.type = null;\n                    if (!this.addError(error.message)) {\n                        return false;\n                    }\n                }\n            } else if (isAllowedType(this._title)) {\n                // optional types\n                try {\n                    this._tag.type = parseType(this._title, this._last, this._options.range);\n                } catch (e) {\n                    //For optional types, lets drop the thrown error when we hit the end of the file\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype._parseNamePath = function (optional) {\n            var name;\n            name = parseName(this._last, sloppy && isAllowedOptional(this._title), true);\n            if (!name) {\n                if (!optional) {\n                    if (!this.addError('Missing or invalid tag name')) {\n                        return false;\n                    }\n                }\n            }\n            this._tag.name = name;\n            return true;\n        };\n\n        TagParser.prototype.parseNamePath = function () {\n            return this._parseNamePath(false);\n        };\n\n        TagParser.prototype.parseNamePathOptional = function () {\n            return this._parseNamePath(true);\n        };\n\n\n        TagParser.prototype.parseName = function () {\n            var assign, name;\n\n            // param, property requires name\n            if (isAllowedName(this._title)) {\n                this._tag.name = parseName(this._last, sloppy && isAllowedOptional(this._title), isAllowedNested(this._title));\n                if (!this._tag.name) {\n                    if (!isNameParameterRequired(this._title)) {\n                        return true;\n                    }\n\n                    // it's possible the name has already been parsed but interpreted as a type\n                    // it's also possible this is a sloppy declaration, in which case it will be\n                    // fixed at the end\n                    if (isParamTitle(this._title) && this._tag.type && this._tag.type.name) {\n                        this._extra.name = this._tag.type;\n                        this._tag.name = this._tag.type.name;\n                        this._tag.type = null;\n                    } else {\n                        if (!this.addError('Missing or invalid tag name')) {\n                            return false;\n                        }\n                    }\n                } else {\n                    name = this._tag.name;\n                    if (name.charAt(0) === '[' && name.charAt(name.length - 1) === ']') {\n                        // extract the default value if there is one\n                        // example: @param {string} [somebody=John Doe] description\n                        assign = name.substring(1, name.length - 1).split('=');\n                        if (assign.length > 1) {\n                            this._tag['default'] = assign.slice(1).join('=');\n                        }\n                        this._tag.name = assign[0];\n\n                        // convert to an optional type\n                        if (this._tag.type && this._tag.type.type !== 'OptionalType') {\n                            this._tag.type = {\n                                type: 'OptionalType',\n                                expression: this._tag.type\n                            };\n                        }\n                    }\n                }\n            }\n\n\n            return true;\n        };\n\n        TagParser.prototype.parseDescription = function parseDescription() {\n            var description = sliceSource(source, index, this._last).trim();\n            if (description) {\n                if ((/^-\\s+/).test(description)) {\n                    description = description.substring(2);\n                }\n                this._tag.description = description;\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseCaption = function parseDescription() {\n            var description = sliceSource(source, index, this._last).trim();\n            var captionStartTag = '<caption>';\n            var captionEndTag = '</caption>';\n            var captionStart = description.indexOf(captionStartTag);\n            var captionEnd = description.indexOf(captionEndTag);\n            if (captionStart >= 0 && captionEnd >= 0) {\n                this._tag.caption = description.substring(\n                    captionStart + captionStartTag.length, captionEnd).trim();\n                this._tag.description = description.substring(captionEnd + captionEndTag.length).trim();\n            } else {\n                this._tag.description = description;\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseKind = function parseKind() {\n            var kind, kinds;\n            kinds = {\n                'class': true,\n                'constant': true,\n                'event': true,\n                'external': true,\n                'file': true,\n                'function': true,\n                'member': true,\n                'mixin': true,\n                'module': true,\n                'namespace': true,\n                'typedef': true\n            };\n            kind = sliceSource(source, index, this._last).trim();\n            this._tag.kind = kind;\n            if (!hasOwnProperty(kinds, kind)) {\n                if (!this.addError('Invalid kind name \\'%0\\'', kind)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseAccess = function parseAccess() {\n            var access;\n            access = sliceSource(source, index, this._last).trim();\n            this._tag.access = access;\n            if (access !== 'private' && access !== 'protected' && access !== 'public') {\n                if (!this.addError('Invalid access name \\'%0\\'', access)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseThis = function parseThis() {\n            // this name may be a name expression (e.g. {foo.bar}),\n            // an union (e.g. {foo.bar|foo.baz}) or a name path (e.g. foo.bar)\n            var value = sliceSource(source, index, this._last).trim();\n            if (value && value.charAt(0) === '{') {\n                var gotType = this.parseType();\n                if (gotType && this._tag.type.type === 'NameExpression' || this._tag.type.type === 'UnionType') {\n                    this._tag.name = this._tag.type.name;\n                    return true;\n                } else {\n                    return this.addError('Invalid name for this');\n                }\n            } else {\n                return this.parseNamePath();\n            }\n        };\n\n        TagParser.prototype.parseVariation = function parseVariation() {\n            var variation, text;\n            text = sliceSource(source, index, this._last).trim();\n            variation = parseFloat(text, 10);\n            this._tag.variation = variation;\n            if (isNaN(variation)) {\n                if (!this.addError('Invalid variation \\'%0\\'', text)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.ensureEnd = function () {\n            var shouldBeEmpty = sliceSource(source, index, this._last).trim();\n            if (shouldBeEmpty) {\n                if (!this.addError('Unknown content \\'%0\\'', shouldBeEmpty)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.epilogue = function epilogue() {\n            var description;\n\n            description = this._tag.description;\n            // un-fix potentially sloppy declaration\n            if (isAllowedOptional(this._title) && !this._tag.type && description && description.charAt(0) === '[') {\n                this._tag.type = this._extra.name;\n                if (!this._tag.name) {\n                    this._tag.name = undefined;\n                }\n\n                if (!sloppy) {\n                    if (!this.addError('Missing or invalid tag name')) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        };\n\n        Rules = {\n            // http://usejsdoc.org/tags-access.html\n            'access': ['parseAccess'],\n            // http://usejsdoc.org/tags-alias.html\n            'alias': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-augments.html\n            'augments': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-constructor.html\n            'constructor': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-constructor.html\n            'class': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-extends.html\n            'extends': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-example.html\n            'example': ['parseCaption'],\n            // http://usejsdoc.org/tags-deprecated.html\n            'deprecated': ['parseDescription'],\n            // http://usejsdoc.org/tags-global.html\n            'global': ['ensureEnd'],\n            // http://usejsdoc.org/tags-inner.html\n            'inner': ['ensureEnd'],\n            // http://usejsdoc.org/tags-instance.html\n            'instance': ['ensureEnd'],\n            // http://usejsdoc.org/tags-kind.html\n            'kind': ['parseKind'],\n            // http://usejsdoc.org/tags-mixes.html\n            'mixes': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-mixin.html\n            'mixin': ['parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-member.html\n            'member': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-method.html\n            'method': ['parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-module.html\n            'module': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-method.html\n            'func': ['parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-method.html\n            'function': ['parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-member.html\n            'var': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-name.html\n            'name': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-namespace.html\n            'namespace': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-private.html\n            'private': ['parseType', 'parseDescription'],\n            // http://usejsdoc.org/tags-protected.html\n            'protected': ['parseType', 'parseDescription'],\n            // http://usejsdoc.org/tags-public.html\n            'public': ['parseType', 'parseDescription'],\n            // http://usejsdoc.org/tags-readonly.html\n            'readonly': ['ensureEnd'],\n            // http://usejsdoc.org/tags-requires.html\n            'requires': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-since.html\n            'since': ['parseDescription'],\n            // http://usejsdoc.org/tags-static.html\n            'static': ['ensureEnd'],\n            // http://usejsdoc.org/tags-summary.html\n            'summary': ['parseDescription'],\n            // http://usejsdoc.org/tags-this.html\n            'this': ['parseThis', 'ensureEnd'],\n            // http://usejsdoc.org/tags-todo.html\n            'todo': ['parseDescription'],\n            // http://usejsdoc.org/tags-typedef.html\n            'typedef': ['parseType', 'parseNamePathOptional'],\n            // http://usejsdoc.org/tags-variation.html\n            'variation': ['parseVariation'],\n            // http://usejsdoc.org/tags-version.html\n            'version': ['parseDescription']\n        };\n\n        TagParser.prototype.parse = function parse() {\n            var i, iz, sequences, method;\n\n\n            // empty title\n            if (!this._title) {\n                if (!this.addError('Missing or invalid title')) {\n                    return null;\n                }\n            }\n\n            // Seek to content last index.\n            this._last = seekContent(this._title);\n\n            if (this._options.range) {\n                this._tag.range = [this._first, source.slice(0, this._last).replace(/\\s*$/, '').length].map(convertIndex);\n            }\n\n            if (hasOwnProperty(Rules, this._title)) {\n                sequences = Rules[this._title];\n            } else {\n                // default sequences\n                sequences = ['parseType', 'parseName', 'parseDescription', 'epilogue'];\n            }\n\n            for (i = 0, iz = sequences.length; i < iz; ++i) {\n                method = sequences[i];\n                if (!this[method]()) {\n                    return null;\n                }\n            }\n\n            return this._tag;\n        };\n\n        function parseTag(options) {\n            var title, parser, tag;\n\n            // skip to tag\n            if (!skipToTag()) {\n                return null;\n            }\n\n            // scan title\n            title = scanTitle();\n\n            // construct tag parser\n            parser = new TagParser(options, title);\n            tag = parser.parse();\n\n            // Seek global index to end of this tag.\n            while (index < parser._last) {\n                advance();\n            }\n\n            return tag;\n        }\n\n        //\n        // Parse JSDoc\n        //\n\n        function scanJSDocDescription(preserveWhitespace) {\n            var description = '', ch, atAllowed;\n\n            atAllowed = true;\n            while (index < length) {\n                ch = source.charCodeAt(index);\n\n                if (atAllowed && ch === 0x40  /* '@' */) {\n                    break;\n                }\n\n                if (esutils.code.isLineTerminator(ch)) {\n                    atAllowed = true;\n                } else if (atAllowed && !esutils.code.isWhiteSpace(ch)) {\n                    atAllowed = false;\n                }\n\n                description += advance();\n            }\n\n            return preserveWhitespace ? description : description.trim();\n        }\n\n        function parse(comment, options) {\n            var tags = [], tag, description, interestingTags, i, iz;\n\n            if (options === undefined) {\n                options = {};\n            }\n\n            if (typeof options.unwrap === 'boolean' && options.unwrap) {\n                source = unwrapComment(comment);\n            } else {\n                source = comment;\n            }\n\n            originalSource = comment;\n\n            // array of relevant tags\n            if (options.tags) {\n                if (Array.isArray(options.tags)) {\n                    interestingTags = { };\n                    for (i = 0, iz = options.tags.length; i < iz; i++) {\n                        if (typeof options.tags[i] === 'string') {\n                            interestingTags[options.tags[i]] = true;\n                        } else {\n                            utility.throwError('Invalid \"tags\" parameter: ' + options.tags);\n                        }\n                    }\n                } else {\n                    utility.throwError('Invalid \"tags\" parameter: ' + options.tags);\n                }\n            }\n\n            length = source.length;\n            index = 0;\n            lineNumber = 0;\n            recoverable = options.recoverable;\n            sloppy = options.sloppy;\n            strict = options.strict;\n\n            description = scanJSDocDescription(options.preserveWhitespace);\n\n            while (true) {\n                tag = parseTag(options);\n                if (!tag) {\n                    break;\n                }\n                if (!interestingTags || interestingTags.hasOwnProperty(tag.title)) {\n                    tags.push(tag);\n                }\n            }\n\n            return {\n                description: description,\n                tags: tags\n            };\n        }\n        exports.parse = parse;\n    }(jsdoc = {}));\n\n    exports.version = utility.VERSION;\n    exports.parse = jsdoc.parse;\n    exports.parseType = typed.parseType;\n    exports.parseParamType = typed.parseParamType;\n    exports.unwrapComment = unwrapComment;\n    exports.Syntax = shallowCopy(typed.Syntax);\n    exports.Error = utility.DoctrineError;\n    exports.type = {\n        Syntax: exports.Syntax,\n        parseType: typed.parseType,\n        parseParamType: typed.parseParamType,\n        stringify: typed.stringify\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n","import doctrine from 'doctrine';\n\nfunction containsJsDoc(value) {\n  return value != null && value.includes('@');\n}\n\nfunction parse(content, tags) {\n  let ast;\n\n  try {\n    ast = doctrine.parse(content, {\n      tags,\n      sloppy: true\n    });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    throw new Error('Cannot parse JSDoc tags.');\n  }\n\n  return ast;\n}\n\nconst DEFAULT_OPTIONS = {\n  tags: ['param', 'arg', 'argument', 'returns', 'ignore']\n};\nexport const parseJsDoc = (value, options = DEFAULT_OPTIONS) => {\n  if (!containsJsDoc(value)) {\n    return {\n      includesJsDoc: false,\n      ignore: false\n    };\n  }\n\n  const jsDocAst = parse(value, options.tags);\n  const extractedTags = extractJsDocTags(jsDocAst);\n\n  if (extractedTags.ignore) {\n    // There is no point in doing other stuff since this prop will not be rendered.\n    return {\n      includesJsDoc: true,\n      ignore: true\n    };\n  }\n\n  return {\n    includesJsDoc: true,\n    ignore: false,\n    // Always use the parsed description to ensure JSDoc is removed from the description.\n    description: jsDocAst.description,\n    extractedTags\n  };\n};\n\nfunction extractJsDocTags(ast) {\n  const extractedTags = {\n    params: null,\n    returns: null,\n    ignore: false\n  };\n\n  for (let i = 0; i < ast.tags.length; i += 1) {\n    const tag = ast.tags[i];\n\n    if (tag.title === 'ignore') {\n      extractedTags.ignore = true; // Once we reach an @ignore tag, there is no point in parsing the other tags since we will not render the prop.\n\n      break;\n    } else {\n      switch (tag.title) {\n        // arg & argument are aliases for param.\n        case 'param':\n        case 'arg':\n        case 'argument':\n          {\n            const paramTag = extractParam(tag);\n\n            if (paramTag != null) {\n              if (extractedTags.params == null) {\n                extractedTags.params = [];\n              }\n\n              extractedTags.params.push(paramTag);\n            }\n\n            break;\n          }\n\n        case 'returns':\n          {\n            const returnsTag = extractReturns(tag);\n\n            if (returnsTag != null) {\n              extractedTags.returns = returnsTag;\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    }\n  }\n\n  return extractedTags;\n}\n\nfunction extractParam(tag) {\n  const paramName = tag.name; // When the @param doesn't have a name but have a type and a description, \"null-null\" is returned.\n\n  if (paramName != null && paramName !== 'null-null') {\n    return {\n      name: tag.name,\n      type: tag.type,\n      description: tag.description,\n      getPrettyName: () => {\n        if (paramName.includes('null')) {\n          // There is a few cases in which the returned param name contains \"null\".\n          // - @param {SyntheticEvent} event- Original SyntheticEvent\n          // - @param {SyntheticEvent} event.\\n@returns {string}\n          return paramName.replace('-null', '').replace('.null', '');\n        }\n\n        return tag.name;\n      },\n      getTypeName: () => {\n        return tag.type != null ? extractTypeName(tag.type) : null;\n      }\n    };\n  }\n\n  return null;\n}\n\nfunction extractReturns(tag) {\n  if (tag.type != null) {\n    return {\n      type: tag.type,\n      description: tag.description,\n      getTypeName: () => {\n        return extractTypeName(tag.type);\n      }\n    };\n  }\n\n  return null;\n}\n\nfunction extractTypeName(type) {\n  if (type.type === 'NameExpression') {\n    return type.name;\n  }\n\n  if (type.type === 'RecordType') {\n    const recordFields = type.fields.map(field => {\n      if (field.value != null) {\n        const valueTypeName = extractTypeName(field.value);\n        return `${field.key}: ${valueTypeName}`;\n      }\n\n      return field.key;\n    });\n    return `({${recordFields.join(', ')}})`;\n  }\n\n  if (type.type === 'UnionType') {\n    const unionElements = type.elements.map(extractTypeName);\n    return `(${unionElements.join('|')})`;\n  } // Only support untyped array: []. Might add more support later if required.\n\n\n  if (type.type === 'ArrayType') {\n    return '[]';\n  }\n\n  if (type.type === 'TypeApplication') {\n    if (type.expression != null) {\n      if (type.expression.name === 'Array') {\n        const arrayType = extractTypeName(type.applications[0]);\n        return `${arrayType}[]`;\n      }\n    }\n  }\n\n  if (type.type === 'NullableType' || type.type === 'NonNullableType' || type.type === 'OptionalType') {\n    return extractTypeName(type.expression);\n  }\n\n  if (type.type === 'AllLiteral') {\n    return 'any';\n  }\n\n  return null;\n}","export const MAX_TYPE_SUMMARY_LENGTH = 90;\nexport const MAX_DEFAULT_VALUE_SUMMARY_LENGTH = 50;\nexport function isTooLongForTypeSummary(value) {\n  return value.length > MAX_TYPE_SUMMARY_LENGTH;\n}\nexport function isTooLongForDefaultValueSummary(value) {\n  return value.length > MAX_DEFAULT_VALUE_SUMMARY_LENGTH;\n}\nexport function createSummaryValue(summary, detail) {\n  if (summary === detail) {\n    return {\n      summary\n    };\n  }\n\n  return {\n    summary,\n    detail\n  };\n}\nexport const normalizeNewlines = string => string.replace(/\\\\r\\\\n/g, '\\\\n');","import { createSummaryValue, isTooLongForTypeSummary } from '../../utils';\nvar FlowTypesType;\n\n(function (FlowTypesType) {\n  FlowTypesType[\"UNION\"] = \"union\";\n  FlowTypesType[\"SIGNATURE\"] = \"signature\";\n})(FlowTypesType || (FlowTypesType = {}));\n\nfunction generateUnionElement({\n  name,\n  value,\n  elements,\n  raw\n}) {\n  if (value != null) {\n    return value;\n  }\n\n  if (elements != null) {\n    return elements.map(generateUnionElement).join(' | ');\n  }\n\n  if (raw != null) {\n    return raw;\n  }\n\n  return name;\n}\n\nfunction generateUnion({\n  name,\n  raw,\n  elements\n}) {\n  if (elements != null) {\n    return createSummaryValue(elements.map(generateUnionElement).join(' | '));\n  }\n\n  if (raw != null) {\n    // Flow Unions can be defined with or without a leading `|` character, so try to remove it.\n    return createSummaryValue(raw.replace(/^\\|\\s*/, ''));\n  }\n\n  return createSummaryValue(name);\n}\n\nfunction generateFuncSignature({\n  type,\n  raw\n}) {\n  if (raw != null) {\n    return createSummaryValue(raw);\n  }\n\n  return createSummaryValue(type);\n}\n\nfunction generateObjectSignature({\n  type,\n  raw\n}) {\n  if (raw != null) {\n    return !isTooLongForTypeSummary(raw) ? createSummaryValue(raw) : createSummaryValue(type, raw);\n  }\n\n  return createSummaryValue(type);\n}\n\nfunction generateSignature(flowType) {\n  const {\n    type\n  } = flowType;\n  return type === 'object' ? generateObjectSignature(flowType) : generateFuncSignature(flowType);\n}\n\nfunction generateDefault({\n  name,\n  raw\n}) {\n  if (raw != null) {\n    return !isTooLongForTypeSummary(raw) ? createSummaryValue(raw) : createSummaryValue(name, raw);\n  }\n\n  return createSummaryValue(name);\n}\n\nexport function createType(type) {\n  // A type could be null if a defaultProp has been provided without a type definition.\n  if (type == null) {\n    return null;\n  }\n\n  switch (type.name) {\n    case FlowTypesType.UNION:\n      return generateUnion(type);\n\n    case FlowTypesType.SIGNATURE:\n      return generateSignature(type);\n\n    default:\n      return generateDefault(type);\n  }\n}","import { createSummaryValue, isTooLongForDefaultValueSummary } from '../../utils';\nimport { isDefaultValueBlacklisted } from '../utils/defaultValue';\nexport function createDefaultValue(defaultValue, type) {\n  if (defaultValue != null) {\n    const {\n      value\n    } = defaultValue;\n\n    if (!isDefaultValueBlacklisted(value)) {\n      return !isTooLongForDefaultValueSummary(value) ? createSummaryValue(value) : createSummaryValue(type.name, value);\n    }\n  }\n\n  return null;\n}","import { createType } from './createType';\nimport { createDefaultValue } from './createDefaultValue';\nexport const createFlowPropDef = (propName, docgenInfo) => {\n  const {\n    flowType,\n    description,\n    required,\n    defaultValue\n  } = docgenInfo;\n  return {\n    name: propName,\n    type: createType(flowType),\n    required,\n    description,\n    defaultValue: createDefaultValue(defaultValue, flowType)\n  };\n};","import { createSummaryValue } from '../../utils';\nexport function createType({\n  tsType,\n  required\n}) {\n  // A type could be null if a defaultProp has been provided without a type definition.\n  if (tsType == null) {\n    return null;\n  }\n\n  if (!required) {\n    return createSummaryValue(tsType.name.replace(' | undefined', ''));\n  }\n\n  return createSummaryValue(tsType.name);\n}","import { createSummaryValue } from '../../utils';\nimport { isDefaultValueBlacklisted } from '../utils/defaultValue';\nexport function createDefaultValue({\n  defaultValue\n}) {\n  if (defaultValue != null) {\n    const {\n      value\n    } = defaultValue;\n\n    if (!isDefaultValueBlacklisted(value)) {\n      return createSummaryValue(value);\n    }\n  }\n\n  return null;\n}","import { createType } from './createType';\nimport { createDefaultValue } from './createDefaultValue';\nexport const createTsPropDef = (propName, docgenInfo) => {\n  const {\n    description,\n    required\n  } = docgenInfo;\n  return {\n    name: propName,\n    type: createType(docgenInfo),\n    required,\n    description,\n    defaultValue: createDefaultValue(docgenInfo)\n  };\n};","import { TypeSystem } from './types';\nimport { createSummaryValue } from '../utils';\nimport { createFlowPropDef } from './flow/createPropDef';\nimport { isDefaultValueBlacklisted } from './utils/defaultValue';\nimport { createTsPropDef } from './typeScript/createPropDef';\nimport { convert } from '../convert';\n\nfunction createType(type) {\n  // A type could be null if a defaultProp has been provided without a type definition.\n  return type != null ? createSummaryValue(type.name) : null;\n} // A heuristic to tell if a defaultValue comes from RDT\n\n\nfunction isReactDocgenTypescript(defaultValue) {\n  const {\n    computed,\n    func\n  } = defaultValue;\n  return typeof computed === 'undefined' && typeof func === 'undefined';\n}\n\nfunction isStringValued(type) {\n  if (!type) {\n    return false;\n  }\n\n  if (type.name === 'string') {\n    return true;\n  }\n\n  if (type.name === 'enum') {\n    return Array.isArray(type.value) && type.value.every(({\n      value: tv\n    }) => typeof tv === 'string' && tv[0] === '\"' && tv[tv.length - 1] === '\"');\n  }\n\n  return false;\n}\n\nfunction createDefaultValue(defaultValue, type) {\n  if (defaultValue != null) {\n    const {\n      value\n    } = defaultValue;\n\n    if (!isDefaultValueBlacklisted(value)) {\n      // Work around a bug in `react-docgen-typescript-loader`, which returns 'string' for a string\n      // default, instead of \"'string'\" -- which is incorrect\n      if (isReactDocgenTypescript(defaultValue) && isStringValued(type)) {\n        return createSummaryValue(JSON.stringify(value));\n      }\n\n      return createSummaryValue(value);\n    }\n  }\n\n  return null;\n}\n\nfunction createBasicPropDef(name, type, docgenInfo) {\n  const {\n    description,\n    required,\n    defaultValue\n  } = docgenInfo;\n  return {\n    name,\n    type: createType(type),\n    required,\n    description,\n    defaultValue: createDefaultValue(defaultValue, type)\n  };\n}\n\nfunction applyJsDocResult(propDef, jsDocParsingResult) {\n  if (jsDocParsingResult.includesJsDoc) {\n    const {\n      description,\n      extractedTags\n    } = jsDocParsingResult;\n\n    if (description != null) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.description = jsDocParsingResult.description;\n    }\n\n    const hasParams = extractedTags.params != null;\n    const hasReturns = extractedTags.returns != null && extractedTags.returns.type != null;\n\n    if (hasParams || hasReturns) {\n      // eslint-disable-next-line no-param-reassign\n      propDef.jsDocTags = {\n        params: hasParams && extractedTags.params.map(x => ({\n          name: x.getPrettyName(),\n          description: x.description\n        })),\n        returns: hasReturns && {\n          description: extractedTags.returns.description\n        }\n      };\n    }\n  }\n\n  return propDef;\n}\n\nexport const javaScriptFactory = (propName, docgenInfo, jsDocParsingResult) => {\n  const propDef = createBasicPropDef(propName, docgenInfo.type, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport const tsFactory = (propName, docgenInfo, jsDocParsingResult) => {\n  const propDef = createTsPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport const flowFactory = (propName, docgenInfo, jsDocParsingResult) => {\n  const propDef = createFlowPropDef(propName, docgenInfo);\n  propDef.sbType = convert(docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport const unknownFactory = (propName, docgenInfo, jsDocParsingResult) => {\n  const propDef = createBasicPropDef(propName, {\n    name: 'unknown'\n  }, docgenInfo);\n  return applyJsDocResult(propDef, jsDocParsingResult);\n};\nexport const getPropDefFactory = typeSystem => {\n  switch (typeSystem) {\n    case TypeSystem.JAVASCRIPT:\n      return javaScriptFactory;\n\n    case TypeSystem.TYPESCRIPT:\n      return tsFactory;\n\n    case TypeSystem.FLOW:\n      return flowFactory;\n\n    default:\n      return unknownFactory;\n  }\n};","import { parseJsDoc } from '../jsdocParser';\nimport { TypeSystem } from './types';\nimport { getDocgenSection, isValidDocgenSection, getDocgenDescription } from './utils';\nimport { getPropDefFactory } from './createPropDef';\n\nconst getTypeSystem = docgenInfo => {\n  if (docgenInfo.type != null) {\n    return TypeSystem.JAVASCRIPT;\n  }\n\n  if (docgenInfo.flowType != null) {\n    return TypeSystem.FLOW;\n  }\n\n  if (docgenInfo.tsType != null) {\n    return TypeSystem.TYPESCRIPT;\n  }\n\n  return TypeSystem.UNKNOWN;\n};\n\nexport const extractComponentSectionArray = docgenSection => {\n  const typeSystem = getTypeSystem(docgenSection[0]);\n  const createPropDef = getPropDefFactory(typeSystem);\n  return docgenSection.map(item => {\n    let sanitizedItem = item;\n\n    if (item.type?.elements) {\n      sanitizedItem = Object.assign({}, item, {\n        type: Object.assign({}, item.type, {\n          value: item.type.elements\n        })\n      });\n    }\n\n    return extractProp(sanitizedItem.name, sanitizedItem, typeSystem, createPropDef);\n  });\n};\nexport const extractComponentSectionObject = docgenSection => {\n  const docgenPropsKeys = Object.keys(docgenSection);\n  const typeSystem = getTypeSystem(docgenSection[docgenPropsKeys[0]]);\n  const createPropDef = getPropDefFactory(typeSystem);\n  return docgenPropsKeys.map(propName => {\n    const docgenInfo = docgenSection[propName];\n    return docgenInfo != null ? extractProp(propName, docgenInfo, typeSystem, createPropDef) : null;\n  }).filter(Boolean);\n};\nexport const extractComponentProps = (component, section) => {\n  const docgenSection = getDocgenSection(component, section);\n\n  if (!isValidDocgenSection(docgenSection)) {\n    return [];\n  } // vue-docgen-api has diverged from react-docgen and returns an array\n\n\n  return Array.isArray(docgenSection) ? extractComponentSectionArray(docgenSection) : extractComponentSectionObject(docgenSection);\n};\n\nfunction extractProp(propName, docgenInfo, typeSystem, createPropDef) {\n  const jsDocParsingResult = parseJsDoc(docgenInfo.description);\n  const isIgnored = jsDocParsingResult.includesJsDoc && jsDocParsingResult.ignore;\n\n  if (!isIgnored) {\n    const propDef = createPropDef(propName, docgenInfo, jsDocParsingResult);\n    return {\n      propDef,\n      jsDocTags: jsDocParsingResult.extractedTags,\n      docgenInfo,\n      typeSystem\n    };\n  }\n\n  return null;\n}\n\nexport function extractComponentDescription(component) {\n  return component != null && getDocgenDescription(component);\n}","import { combineParameters } from '@storybook/store';\nexport const enhanceArgTypes = context => {\n  const {\n    component,\n    argTypes: userArgTypes,\n    parameters: {\n      docs = {}\n    }\n  } = context;\n  const {\n    extractArgTypes\n  } = docs;\n  const extractedArgTypes = extractArgTypes && component ? extractArgTypes(component) : {};\n  const withExtractedTypes = extractedArgTypes ? combineParameters(extractedArgTypes, userArgTypes) : userArgTypes;\n  return withExtractedTypes;\n};","import{a as u,b as x,d as T}from\"./chunk-C4YTJRJQ.mjs\";import{extractComponentDescription as S,enhanceArgTypes as b}from\"@storybook/docs-tools\";import{hasDocgen as g,extractComponentProps as h,convert as A}from\"@storybook/docs-tools\";var E=[\"props\",\"events\",\"slots\",\"methods\"],p=e=>{if(!g(e))return null;let o={};return E.forEach(r=>{h(e,r).forEach(({propDef:c,docgenInfo:n,jsDocTags:m})=>{let{name:t,type:y,description:f,defaultValue:i,required:d}=c,l=r===\"props\"?A(n):{name:\"void\"};o[t]={name:t,description:f,type:{required:d,...l},table:{type:y,jsDocTags:m,defaultValue:i,category:r}}})}),o};var a={docs:{inlineStories:!0,extractArgTypes:p,extractComponentDescription:S}},v=[b];var w={framework:\"vue3\",...a};export{u as applyDecorators,v as argTypesEnhancers,w as parameters,x as render,T as renderToDOM};\n"],"names":["convertSig","type","values","prop","convert","name","raw","base","isLiteral","toEnumOption","element","QUOTE_REGEX","trimQuotes","str","includesQuotes","SIGNATURE_REGEXP","computed","value","v","trimmedValue","mapValues","field","literalValues","otherVal","otherName","docgenInfo","tsType","flowType","propTypesConvert","tsConvert","flowConvert","TypeSystem","BLACKLIST","isDefaultValueBlacklisted","x","hasDocgen","component","isValidDocgenSection","docgenSection","getDocgenSection","section","getDocgenDescription","isExpression","node","isIterationStatement","isStatement","isSourceElement","trailingStatement","isProblematicIfStatement","current","astModule","ES6Regex","ES5Regex","NON_ASCII_WHITESPACES","IDENTIFIER_START","IDENTIFIER_PART","ch","isDecimalDigit","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","fromCodePoint","cp","cu1","cu2","isIdentifierStartES5","isIdentifierPartES5","isIdentifierStartES6","isIdentifierPartES6","codeModule","code","require$$0","isStrictModeReservedWordES6","id","isKeywordES5","strict","isKeywordES6","isReservedWordES5","isReservedWordES6","isRestrictedWord","isIdentifierNameES5","i","iz","decodeUtf16","lead","trail","isIdentifierNameES6","lowCh","check","isIdentifierES5","isIdentifierES6","keywordModule","utils","require$$1","require$$2","assert","expr","message","assert_1","VERSION","utility","DoctrineError","Middle","throwError","Syntax","Token","source","length","index","previous","token","esutils","rangeOffset","addRange","isTypeName","Context","maybeAddRange","range","advance","scanHexEscape","prefix","len","scanString","quote","unescaped","restore","scanNumber","number","scanTypeName","ch2","next","consume","target","text","expect","parseUnionType","elements","startIndex","parseTypeExpression","parseArrayType","restStartIndex","parseFieldName","parseFieldType","key","rangeStart","parseRecordType","fields","rangeEnd","parseNameExpression","parseTypeExpressionList","parseTop","parseTypeName","applications","parseResultType","parseParametersType","params","optionalSequence","rest","nameStartIndex","parseFunctionType","isNew","thisBinding","result","fnType","parseBasicTypeExpression","context","parseTopParamType","parseType","src","opt","parseParamType","stringifyImpl","compact","topLevel","stringify","options","typed","jsdoc","hasOwnProperty","sliceSource","last","func","obj","shallowCopy","ret","isASCIIAlphanumeric","isParamTitle","title","isReturnTitle","isProperty","isNameParameterRequired","isAllowedName","isAllowedNested","isAllowedOptional","isTypeParameterRequired","isAllowedType","WHITESPACE","STAR_MATCHER","unwrapComment","doc","convertUnwrappedCommentIndex","originalSource","unwrappedIndex","replacedSource","numSkippedChars","matcher","match","exports","Rules","lineNumber","recoverable","sloppy","scanTitle","seekContent","waiting","brace","direct","convertIndex","scanIdentifier","identifier","skipWhiteSpace","parseName","allowBrackets","allowNestedParams","useBrackets","insideString","bracketDepth","skipToTag","rangeIndex","TagParser","errorText","args","msg","whole","error","optional","assign","description","captionStartTag","captionEndTag","captionStart","captionEnd","kind","kinds","access","gotType","variation","shouldBeEmpty","sequences","method","parseTag","parser","tag","scanJSDocDescription","preserveWhitespace","atAllowed","parse","comment","tags","interestingTags","containsJsDoc","content","ast","doctrine","e","DEFAULT_OPTIONS","parseJsDoc","jsDocAst","extractedTags","extractJsDocTags","paramTag","extractParam","returnsTag","extractReturns","paramName","extractTypeName","valueTypeName","MAX_TYPE_SUMMARY_LENGTH","MAX_DEFAULT_VALUE_SUMMARY_LENGTH","isTooLongForTypeSummary","isTooLongForDefaultValueSummary","createSummaryValue","summary","detail","FlowTypesType","generateUnionElement","generateUnion","generateFuncSignature","generateObjectSignature","generateSignature","generateDefault","createType","createDefaultValue","defaultValue","createFlowPropDef","propName","required","createTsPropDef","isReactDocgenTypescript","isStringValued","tv","createBasicPropDef","applyJsDocResult","propDef","jsDocParsingResult","hasParams","hasReturns","javaScriptFactory","tsFactory","flowFactory","unknownFactory","getPropDefFactory","typeSystem","getTypeSystem","extractComponentSectionArray","createPropDef","item","sanitizedItem","_a","extractProp","extractComponentSectionObject","docgenPropsKeys","extractComponentProps","extractComponentDescription","enhanceArgTypes","userArgTypes","docs","extractArgTypes","extractedArgTypes","combineParameters","E","p","g","o","r","h","c","n","m","t","y","f","d","l","A","a","S","b","w"],"mappings":"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"}