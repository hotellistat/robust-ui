{"version":3,"file":"index-e446e932.js","sources":["../../src/components/Checkbox/index.vue"],"sourcesContent":["<template>\n  <div class=\"inline-block\">\n    <label class=\"flex items-start\">\n      <input :id=\"cuid\" v-model=\"isChecked\" type=\"checkbox\" class=\"hidden\" />\n      <div\n        class=\"relative mr-2 box-content h-4 w-4 flex-shrink-0 flex-grow-0 rounded border text-white transition-all duration-100\"\n        :class=\"[\n          isChecked\n            ? 'border-primary-500 bg-primary-500 '\n            : 'border-gray-300  bg-gray-100 dark:border-gray-500 dark:bg-gray-700',\n        ]\"\n      >\n        <PhCheck\n          :class=\"[isChecked ? 'opacity-1' : 'opacity-0']\"\n          size=\"14\"\n          weight=\"bold\"\n          class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 transform transition-all duration-100\"\n        />\n      </div>\n      <div v-if=\"title\" class=\"w-full select-none pt-px\">\n        {{ title }}\n      </div>\n      <slot v-if=\"$slots.title\" name=\"title\" />\n    </label>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue';\nimport { PhCheck } from '@phosphor-icons/vue';\n\nconst props = defineProps({\n  modelValue: {\n    type: [Array, String, Number, Boolean],\n    default: false,\n  },\n  value: {\n    type: [Array, String, Number, Boolean],\n    default: true,\n  },\n  disabledValue: {\n    type: [Array, String, Number, Boolean],\n    default: false,\n  },\n  title: {\n    type: String,\n    default: undefined,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n});\nconst emit = defineEmits(['update:modelValue', 'change']);\n\nconst cuid = '_' + Math.random().toString(36).substr(2, 9);\n\nconst isChecked = computed<boolean>({\n  get(): boolean {\n    if (Array.isArray(props.modelValue)) {\n      return props.modelValue.includes(props.value);\n    } else {\n      return props.modelValue === props.value;\n    }\n  },\n  set(value) {\n    let newModelValue = props.modelValue;\n    if (Array.isArray(newModelValue)) {\n      if (value) {\n        newModelValue.push(props.value);\n      } else {\n        newModelValue.splice(newModelValue.indexOf(props.value), 1);\n      }\n    } else {\n      if (value) {\n        newModelValue = props.value;\n      } else {\n        newModelValue = props.disabledValue;\n      }\n    }\n    emit('update:modelValue', newModelValue);\n    emit('change', newModelValue);\n  },\n});\n</script>\n"],"names":["cuid","isChecked","computed","props","value","newModelValue","emit"],"mappings":"6mBAuDMA,EAAO,IAAM,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,EAEnDC,EAAYC,EAAkB,CAClC,KAAe,CACb,OAAI,MAAM,QAAQC,EAAM,UAAU,EACzBA,EAAM,WAAW,SAASA,EAAM,KAAK,EAErCA,EAAM,aAAeA,EAAM,KAEtC,EACA,IAAIC,EAAO,CACT,IAAIC,EAAgBF,EAAM,WACtB,MAAM,QAAQE,CAAa,EACzBD,EACYC,EAAA,KAAKF,EAAM,KAAK,EAE9BE,EAAc,OAAOA,EAAc,QAAQF,EAAM,KAAK,EAAG,CAAC,EAGxDC,EACFC,EAAgBF,EAAM,MAEtBE,EAAgBF,EAAM,cAG1BG,EAAK,oBAAqBD,CAAa,EACvCC,EAAK,SAAUD,CAAa,CAC9B,CAAA,CACD"}