{"version":3,"file":"index.stories-913ac2fe.js","sources":["../../src/components/Pagination/index.vue"],"sourcesContent":["<template>\n  <div class=\"flex\">\n    <nav\n      class=\"relative z-0 inline-flex -space-x-px rounded-md shadow-sm\"\n      aria-label=\"Pagination\"\n    >\n      <span\n        class=\"paginate-btn relative inline-flex items-center rounded-l-md border-gray-200 bg-gray-50 p-2 text-sm font-medium text-gray-500 hover:bg-gray-50 dark:border-gray-600 dark:bg-gray-800\"\n        @click=\"() => page > 1 && setPage(page - 1)\"\n      >\n        <span class=\"sr-only\">Previous</span>\n        <PhCaretLeft\n          type=\"chevron-left\"\n          class=\"h-5 w-5\"\n          size=\"24\"\n          weight=\"bold\"\n        />\n      </span>\n      <template v-for=\"(value, index) in listPages\" :key=\"index\">\n        <span\n          class=\"paginate-btn relative inline-flex w-12 items-center justify-center border-gray-200 bg-gray-50 py-2 text-sm font-medium text-gray-700 hover:bg-gray-300 dark:border-gray-600 dark:bg-gray-800\"\n          :class=\"value === page ? 'active bg-gray-100 dark:text-gray-900' : ''\"\n          @click=\"() => setPage(value)\"\n          >{{ value }}</span\n        >\n        <span\n          v-if=\"showDot(index)\"\n          class=\"paginate-btn relative inline-flex w-12 items-center justify-center border-gray-200 bg-gray-50 py-2 text-sm font-medium text-gray-700 hover:bg-gray-300 dark:border-gray-600 dark:bg-gray-800\"\n          >...</span\n        >\n      </template>\n\n      <span\n        class=\"paginate-btn relative inline-flex items-center rounded-r-md border-gray-200 bg-gray-50 px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 dark:border-gray-600 dark:bg-gray-800\"\n        @click=\"() => page < pageCount && setPage(page + 1)\"\n      >\n        <span class=\"sr-only\">Next</span>\n        <PhCaretRight\n          type=\"chevron-right\"\n          class=\"h-5 w-5\"\n          size=\"24\"\n          weight=\"bold\"\n        />\n      </span>\n    </nav>\n    <div v-if=\"showPageSize\">\n      <div ref=\"containerRef\" class=\"relative ml-2 flex h-full flex-col\">\n        <div\n          class=\"shadow-outline flex flex h-full h-8 items-center overflow-hidden rounded-md border-gray-200 bg-gray-50 p-1.5 shadow-inner focus-within:outline-none focus-within:ring dark:border-gray-600 dark:bg-gray-800\"\n          @click=\"toggleDropdown\"\n        >\n          <div\n            class=\"flex h-full w-full items-center bg-transparent text-current outline-none\"\n            :class=\"[$slots.prefix || 'pl-2']\"\n          >\n            <div class=\"min-w-0 select-none truncate\">{{ pageSize }}</div>\n          </div>\n\n          <div\n            class=\"flex h-full flex-shrink-0 items-center pr-2 pl-2 text-gray-400\"\n          >\n            <PhCaretDown\n              :size=\"18\"\n              class=\"transition-transform duration-200\"\n              :class=\"{ 'rotate-180 transform': isOpen }\"\n            />\n          </div>\n        </div>\n\n        <ul\n          v-if=\"isOpen\"\n          class=\"absolute top-10 z-50 ml-0.5 w-full rounded-lg py-2 text-gray-700 shadow-2xl dark:bg-gray-700 dark:text-white\"\n        >\n          <li\n            v-for=\"size in [10, 25, 50]\"\n            :key=\"size\"\n            class=\"flex items-center justify-center px-4 py-1.5 transition-colors duration-200 hover:bg-gray-500 hover:text-white\"\n            :class=\"pageSize === size ? 'bg-gray-500 text-white ' : ''\"\n            @click=\"selectItem(size)\"\n          >\n            <span>{{ size }}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, watch, toRefs, onMounted } from 'vue';\nimport { PhCaretLeft, PhCaretRight, PhCaretDown } from '@phosphor-icons/vue';\nimport { onClickOutside } from '@vueuse/core';\n\nconst props = defineProps({\n  pageSize: {\n    type: Number,\n    default: 0,\n  },\n  totalCount: {\n    type: Number,\n    default: 0,\n  },\n  page: {\n    type: Number,\n    default: 0,\n  },\n  showPageSize: {\n    type: Boolean,\n    default: true,\n  },\n});\nconst emit = defineEmits(['update:page', 'update:pageSize']);\n\nconst { pageSize, totalCount, page } = toRefs(props);\nconst pageCount = ref(0);\nconst containerRef = ref(null);\nconst isOpen = ref(false);\nconst listPages = ref([]);\n\nconst setPage = (value) => {\n  emit('update:page', value);\n};\n\nwatch([totalCount, pageSize, page], () => listPageShow());\nconst toggleDropdown = () => {\n  isOpen.value = !isOpen.value;\n};\n\nconst selectItem = (value) => {\n  if (value !== pageSize.value) {\n    isOpen.value = false;\n    emit('update:pageSize', value);\n  }\n};\n\nonClickOutside(containerRef, (e) => {\n  if (isOpen.value && !containerRef.value.contains(e.target)) {\n    isOpen.value = false;\n  }\n});\n\nconst listPageShow = () => {\n  pageCount.value = Math.ceil(totalCount.value / pageSize.value);\n  const pages = [];\n  if (pageCount.value < 10) {\n    for (let i = 1; i <= pageCount.value; i++) {\n      pages.push(i);\n    }\n    listPages.value = pages;\n    return listPages.value;\n  }\n  // try to keep 3 more pages each side of current page\n  let start = page.value - 3 < 1 ? 1 : page.value - 3;\n  let end = page.value + 3 > pageCount.value ? pageCount.value : page.value + 3;\n\n  // if start or end is not next to two side, remove a page\n  // because this case we will have 2 ... each side\n  if (start === 1) {\n    end = 7 + start;\n  }\n  if (end === pageCount.value) {\n    start = end - 7;\n  }\n\n  if (end < pageCount.value - 1 && start > 2 && end - start === 6) {\n    end -= 1;\n  }\n  for (let i = start; i <= end; i++) {\n    if (i > 0 && i < pageCount.value) {\n      pages.push(i);\n    }\n  }\n  if (pages[0] !== 1) {\n    pages.unshift(1);\n  }\n  if (pages[pages.length - 1] !== pageCount.value) {\n    pages.push(pageCount.value);\n  }\n  listPages.value = pages;\n  return listPages.value;\n};\nconst showDot = (index: number) => {\n  if (listPages.value[index + 1] - listPages.value[index] > 1) {\n    return true;\n  }\n  return false;\n};\n\nonMounted(() => {\n  listPageShow();\n});\n</script>\n\n<style lang=\"postcss\" scoped>\n.dark .paginate-btn {\n  background: rgba(0, 0, 0, 0);\n  color: #e5e7eb;\n}\n\n.dark .paginate-btn.active {\n  background: #323f51;\n}\n\n.dark .paginate-btn:hover {\n  background: rgba(31, 41, 55, var(--tw-bg-opacity));\n}\n\n.active {\n  background-color: rgb(229 231 234) !important;\n}\n\n.dark .active {\n  color: #111111 !important;\n}\n</style>\n"],"names":["pageSize","totalCount","page","toRefs","props","pageCount","ref","containerRef","isOpen","listPages","setPage","value","emit","watch","listPageShow","toggleDropdown","selectItem","onClickOutside","pages","i","start","end","showDot","index","onMounted"],"mappings":"w0CAiHM,CAAE,SAAAA,EAAU,WAAAC,EAAY,KAAAC,CAAK,EAAIC,EAAOC,CAAK,EAC7CC,EAAYC,EAAI,CAAC,EACjBC,EAAeD,EAAI,IAAI,EACvBE,EAASF,EAAI,EAAK,EAClBG,EAAYH,EAAI,CAAA,CAAE,EAElBI,EAAWC,GAAU,CACzBC,EAAK,cAAeD,CAAK,CAAA,EAG3BE,EAAM,CAACZ,EAAYD,EAAUE,CAAI,EAAG,IAAMY,GAAc,EACxD,MAAMC,EAAiB,IAAM,CACpBP,EAAA,MAAQ,CAACA,EAAO,KAAA,EAGnBQ,EAAcL,GAAU,CACxBA,IAAUX,EAAS,QACrBQ,EAAO,MAAQ,GACfI,EAAK,kBAAmBD,CAAK,EAC/B,EAGaM,EAAAV,EAAe,GAAM,CAC9BC,EAAO,OAAS,CAACD,EAAa,MAAM,SAAS,EAAE,MAAM,IACvDC,EAAO,MAAQ,GACjB,CACD,EAED,MAAMM,EAAe,IAAM,CACzBT,EAAU,MAAQ,KAAK,KAAKJ,EAAW,MAAQD,EAAS,KAAK,EAC7D,MAAMkB,EAAQ,CAAA,EACV,GAAAb,EAAU,MAAQ,GAAI,CACxB,QAASc,EAAI,EAAGA,GAAKd,EAAU,MAAOc,IACpCD,EAAM,KAAKC,CAAC,EAEd,OAAAV,EAAU,MAAQS,EACXT,EAAU,MAGnB,IAAIW,EAAQlB,EAAK,MAAQ,EAAI,EAAI,EAAIA,EAAK,MAAQ,EAC9CmB,EAAMnB,EAAK,MAAQ,EAAIG,EAAU,MAAQA,EAAU,MAAQH,EAAK,MAAQ,EAIxEkB,IAAU,IACZC,EAAM,EAAID,GAERC,IAAQhB,EAAU,QACpBe,EAAQC,EAAM,GAGZA,EAAMhB,EAAU,MAAQ,GAAKe,EAAQ,GAAKC,EAAMD,IAAU,IACrDC,GAAA,GAET,QAASF,EAAIC,EAAOD,GAAKE,EAAKF,IACxBA,EAAI,GAAKA,EAAId,EAAU,OACzBa,EAAM,KAAKC,CAAC,EAGZ,OAAAD,EAAM,CAAC,IAAM,GACfA,EAAM,QAAQ,CAAC,EAEbA,EAAMA,EAAM,OAAS,CAAC,IAAMb,EAAU,OAClCa,EAAA,KAAKb,EAAU,KAAK,EAE5BI,EAAU,MAAQS,EACXT,EAAU,KAAA,EAEba,EAAWC,GACXd,EAAU,MAAMc,EAAQ,CAAC,EAAId,EAAU,MAAMc,CAAK,EAAI,EAM5D,OAAAC,EAAU,IAAM,CACDV,GAAA,CACd;;;;;;;;;;;;;;"}